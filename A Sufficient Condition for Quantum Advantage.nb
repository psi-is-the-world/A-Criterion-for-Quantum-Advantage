(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    193054,       4281]
NotebookOptionsPosition[    180352,       4106]
NotebookOutlinePosition[    180750,       4122]
CellTagsIndexPosition[    180707,       4119]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Sufficient Condition for Quantum Advantage: Notebook", "Title",
 CellChangeTimes->{{3.932642740499095*^9, 3.9326427678078814`*^9}, {
  3.9326431224832172`*^9, 
  3.9326431238855247`*^9}},ExpressionUUID->"57d9e8aa-b72d-4be3-9d7b-\
2810628066d4"],

Cell["Chaitanya Karamchedu, Matthew Fox, and Daniel Gottesman", "Author",
 CellChangeTimes->{{3.932642771639089*^9, 3.932642779897958*^9}, {
  3.9326431286469584`*^9, 3.9326431380662746`*^9}, {3.934198333646117*^9, 
  3.934198340648018*^9}, {3.934305453413239*^9, 
  3.934305457118877*^9}},ExpressionUUID->"81d3853e-63ee-4181-bf6e-\
350df9589e2e"],

Cell["\<\
\tUniversity of Maryland, College Park
\tUniversity of Colorado, Boulder\
\>", "Affiliation",
 CellChangeTimes->{{3.932643144134646*^9, 3.93264320342498*^9}, {
  3.932856859247774*^9, 3.9328568593283854`*^9}, {3.934198342364637*^9, 
  3.9341983448921947`*^9}, {3.934305461288143*^9, 
  3.934305464430769*^9}},ExpressionUUID->"5c6915c3-0590-4db5-a7ac-\
e242e345f4c0"],

Cell["Original paper: ARXIV LINK COMING SOON", "Item",
 CellChangeTimes->{{3.9326427841900797`*^9, 3.932642801491909*^9}, {
  3.93264317068336*^9, 3.9326431815832567`*^9}, {3.934457570016963*^9, 
  3.934457571109017*^9}},ExpressionUUID->"b13e943f-66c1-4199-9db5-\
fa643eaa7f9e"],

Cell[CellGroupData[{

Cell["Important Information", "Section",
 CellChangeTimes->{{3.9326434752580643`*^9, 3.9326434865189342`*^9}, 
   3.9326436125705433`*^9, {3.932643703821258*^9, 3.932643706578622*^9}, {
   3.934197247450512*^9, 3.934197258552023*^9}, {3.934461971886971*^9, 
   3.93446201871382*^9}, {3.934536700839335*^9, 
   3.934536706714128*^9}},ExpressionUUID->"ecd0123f-8395-48cd-8334-\
7e9b0d83dafe"],

Cell[TextData[{
 "This notebook contains code for computing the essential gadgets and actions \
that appear in our paper, A Sufficient Condition for Quantum Advantage. You \
are encouraged to read it top down, and it is recommended that you read it \
concurrently with our paper. \n\nImportantly, the cells in the Applications \
section of the notebook should *not* be evaluated all at once. This is \
because in that section, we redefine variables as we go (in particular the \
variable ",
 Cell[BoxData[
 "U"], "InlineCode",ExpressionUUID->"12dddd22-3232-4fcc-b63d-3c6e161cc8a1"],
 ", which denotes a conjugating single-qubit unitary). Therefore, only the \
cells in the Gadget Computation and Intractability Tests sections should be \
evaluated, and thereafter the cells should be evaluated sequentially from top \
to bottom."
}], "Text",
 CellChangeTimes->{{3.934197264390047*^9, 3.934197270075955*^9}, {
   3.9344580679117603`*^9, 3.9344580987225657`*^9}, {3.9344782551046553`*^9, 
   3.934478380116172*^9}, {3.9344790662113256`*^9, 3.93447907680932*^9}, 
   3.934479108835846*^9, {3.934480490447103*^9, 3.9344806618490343`*^9}, {
   3.934481267884945*^9, 3.934481315676052*^9}, {3.934481387336193*^9, 
   3.934481389690497*^9}, {3.9345357896586123`*^9, 3.934535849288417*^9}, {
   3.934536221598651*^9, 3.934536315509204*^9}, {3.9345367497170057`*^9, 
   3.934536758220636*^9}, {3.934540688739609*^9, 3.934540773601289*^9}, 
   3.9345408838423223`*^9},ExpressionUUID->"3efe13e0-f1e6-4107-9212-\
43d962787a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gadget Computation", "Section",
 CellChangeTimes->{{3.932642992444775*^9, 3.932642997668407*^9}, {
  3.9326433159675217`*^9, 3.932643317642353*^9}, {3.9326434416367598`*^9, 
  3.932643448470441*^9}, {3.934481321530785*^9, 3.934481322575203*^9}, {
  3.9344813820217333`*^9, 
  3.9344813826330347`*^9}},ExpressionUUID->"10de8a77-11a3-42dd-9d5f-\
8e325949309f"],

Cell[TextData[{
 "We start with two basic commands, whose purposes are to find the dimension \
of a square matrix ",
 Cell[BoxData[
 "M"], "InlineCode",ExpressionUUID->"07588e28-b81c-4622-94d4-1e1466adbe5f"],
 " and to normalize ",
 Cell[BoxData[
 "M"], "InlineCode",ExpressionUUID->"0614c0b0-2d6f-49a0-91a2-c0689ba36cd1"],
 " (assuming it it invertible), respectively:"
}], "Text",
 CellChangeTimes->{{3.934540507733781*^9, 3.9345405358721857`*^9}, 
   3.934544379315938*^9},ExpressionUUID->"0a41a128-397d-4b75-b134-\
10a1ebc7745e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DimensionSquareMatrix", "[", "M_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "M", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"NormalizedMatrix", "[", "M_", "]"}], " ", ":=", " ", 
  RowBox[{"M", " ", "/", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Det", "[", "M", "]"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"DimensionSquareMatrix", "[", "M", "]"}]}], 
     ")"}]}]}]}]}], "Code",
 CellChangeTimes->{{3.934540517586437*^9, 3.934540521880328*^9}, 
   3.93454105746712*^9, {3.934541095916728*^9, 3.9345411130896673`*^9}, 
   3.934541241577877*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"af3caf81-3bd9-467a-8d3e-c6758da7c8ec"],

Cell[TextData[{
 "Next, we need two commands that take in a list of ancilla and \
post-selection bits, respectively, and then output the correct quantum state \
in the computational basis. We call these ",
 Cell[BoxData[
 "AncillaVector"], "InlineCode",ExpressionUUID->
  "2a83bee5-9950-49e2-9107-17d9db7a249e"],
 " and ",
 Cell[BoxData[
 "PostVector"], "InlineCode",ExpressionUUID->
  "7acde0cd-47c3-4c61-9e9d-fcad2593a743"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.9345411650761433`*^9, 3.934541229268361*^9}, {
  3.934544386530987*^9, 
  3.934544387336821*^9}},ExpressionUUID->"6cf1093f-2103-4d2e-85d2-\
848279c36c31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AncillaVector", "[", "AncillaBits_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"1", " ", "+", " ", 
                 RowBox[{"AncillaBits", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", "2"}], "]"}], 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"0", " ", "+", " ", 
                 RowBox[{"AncillaBits", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", "2"}], "]"}], 
              "}"}]}], "}"}]}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "AncillaBits", "]"}]}], "}"}]}], "]"}], ";", 
      " ", "\n", "\t", "a"}]}], "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"PostVector", "[", "PostBits_", "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"AncillaVector", "[", "PostBits", "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.9345412379411507`*^9, 3.934541240248414*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"dd0725e1-388e-44c7-b1af-41f2aae1af59"],

Cell[TextData[{
 "Thus, if we want to represent the ancilla ket state",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|011", "\[RightAngleBracket]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "|011\\rangle", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "eb76953e-c65e-4bb1-9890-1f64e750a93a"],
 " as a vector, all we do is evaluate ",
 Cell[BoxData[
  RowBox[{"AncillaVector", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], "]"}]], "InlineCode",
  ExpressionUUID->"c4ac3104-7de1-4740-b63e-a942330986b6"],
 ". Similarly, the post-selected bra vector ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[LeftAngleBracket]", "1101|"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\langle 1101 |", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ad28039a-291d-4082-99d7-67ff9dca65e3"],
 " is got by evaluating ",
 Cell[BoxData[
  RowBox[{"PostVector", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "]"}]], "InlineCode",
  ExpressionUUID->"88e177bd-5c71-4f88-80c7-43a5a8afcb86"],
 "."
}], "Text",
 CellChangeTimes->{{3.934541250296194*^9, 3.934541409630406*^9}, 
   3.9345466211731443`*^9},ExpressionUUID->"62265eed-fcd0-41c7-9ff9-\
805c0d728ec0"],

Cell[TextData[{
 "With this, we can easily compute post-selection gadgets. To do so, we \
employ the following fact: one can assume without loss of generality that all \
ancillae and post-selection qubits happen on the bottom-most registers of the \
gadget. This holds because one can always attach SWAP gates to make the \
ancillae and post-selected qubits on the bottom. For example:\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
mIYOWD8dsB46IABNpAPmSwdMQwdMQwesnw4IAPnRAfOlA6ahA6ahA9ZPB6yH
DghAE+mA+dIB09AB09AB66cDAkB+dMB86YBp6IBp6ID10wHroQMC0EQ6YL50
wDR0wDR0wPrpgACQHx0wXzpgGjpgGjpg/XTAeuiAADSRDpgvHTANHTANHbB+
OiAA5EcHzJcOmIYOmIYOWD8dsB46IABNpAPmSwdMQwdMQwesnw4IAPnRAfOl
A6ahA6ahA9ZPB6yHDghAE+mA+dIB09AB09AB66cDAkB+dMB86YBp6IBp6ID1
0wHroQMCVfrud7/b2m233VqHHnpo67XXXku9O32Jz77nz5/fuvrqq1PvCjXS
AfOlA6ahA6ahA9ZPBwSaJD7fibnOJZdcknpX+hJzyMMPP7y1YMGC9udVNIcO
mC8dMA0dMA0dsH46YD10QDYl3ocfcsgh7ffhDz/8cOrd6Uvs84EHHtjafffd
fYZZs5hjTr2WPPTQQ6l3Z5NefPHFaa9/zzzzTOpdoiY6YL50wDR0wDR0wPrp
gECTTL3Ovfvd7069K32J1+Opfd5mm2185t0gOmC+dMA0dMA0dMD66YD10AHZ
lPPOO2/jsbHPPvuk3p2+dB7X0S+pz3bbbTdWTeXll1+e9vp3wgknpN4laqID
5ksHTEMHTEMHrJ8OCDRF9zmPr7zySupd2qR479G5z7fffnvqXaImOmC+dMA0
dMA0dMD66YD10AGZTfx92WKLLTYeG3vvvXfqXepLvB+Z2ucddtgh9e40yrbb
brvxZ3/zzTen3p2+7Lfffhv3OY73n/3sZ6l3iRrogPnSAdPQAdPQAeunAwJN
8ZOf/GTaa12cA5m7mIt1fgYRczWaQQfMlw6Yhg6Yhg5YPx2wHjogs4lz7zqP
jRtuuCH1LvXlr/7qrzbu8+/93u+l3p1GGccO2H3O6fe+973Uu0QNdMB86YBp
6IBp6ID10wGBphjHDhhOPPHEafsd1zUy+XTAfOmAaeiAaeiA9dMB66EDMpvO
66TmzJnTXndvHOiA6YyqA27YsKF1//33t1v0RRdd1L5f7XXXXddes3LY47L7
utd99923or0mZzpgvnTANHTANHTA+umAQFOMsgOOcn725JNPTtvveI/C5NMB
86UDpqEDpqED1k8HrIcOSC8vvPDCtONiyZIlQ2/zueeea61YsaI9P4h5woUX
Xth+7xDv86v8W6YDplN1B4zXqP3333/G61TniDXv4/h87LHHSn+dU045Zdo2
169fP/S+kzcdMF86YBo6YBo6YP10QKApRtEB65qfzZ07d+P2rPXRDDpgvnTA
NHTANHTA+umA9dAB6eWyyy6bdlzEeX1lvP76660bb7yxtdtuu806V/jQhz7U
Ovfcc1vr1q0bet91wHSq6oBxfumCBQtmHCfxfC5evLj9uWkcM0WtII65QT3z
zDPTtnPppZeW3nfGgw6YLx0wDR0wDR2wfjog0BRVdsC652fXXHPNtO2sWrWq
9L4zHnTAfOmAaeiAaeiA9dMB66ED0kucczdsS1u9enVr6623nnGMzZ8/v30O
4R577NG+32j3v7/++uuH2ncdMJ0qOuDTTz89bTsxFi5c2L7vTKd4/xP3odlu
u+2m/bfz5s1rz3kHFY9z3DSHDpgvHTANHTANHbB+OiDQFFV1wBTzs9jXuK5w
ahtHHXVUqX1nfOiA+dIB09AB09AB66cDzu7222+vZDuj7IA+Tx1fP/zhD6cd
E3Ft4KDiGO183x7jS1/6UutHP/rRtP8ufq/jmOvugfE+v8x5g0EHTGfYDhhz
zO5j4bTTTpv1MTE32GmnnaY9Zpttthl4ztD93rbsNbCMBx0wXzpgGjpgGjpg
/XRAoCmq6IAp52ednwvGPgy77iB50wHzpQOmoQOmoQPWTwfs7a//+q9bb3vb
21qf+MQnWq+88spQ2xpVB/yzP/uz9rbOOOOMobdF/Y488shpx8SLL7440OPj
/UD3cfW9731v1sc8/vjjM+YXcc1gGTpgOsN2wLhGtPMYWLRoUV+Pi/vJxtyy
87FxHA8i5hid7bqKNTHJV64d8Kmnnmr9+Z//eeu4445rnXTSSa3TTz+9dc45
57SWLVvWuvzyy1tXX311ex4WI/53/LP4d/HfxH8bj4nHnnnmma2f/exnhV/j
qquuah177LGtE044oXXqqae2zj777Pbf/jjnI/7d1772tfY6rtdee237/477
5Ma/P+uss9pracbj4ms8+OCDI/kZ6IBp6IBp5N4B43UkXmPidz5eN+oaMYeI
e9CNgg4INEUVHTDl/Kz78yrdYbLl2gHvuuuu9vzn+OOPb5188sntedZ5553X
niNdeeWV7XvYxtwp5lAxx4z31BdddFFr6dKl7XndiSee2H5vE/O3Ii+99FL7
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
A8Z7t6l9OfTQQ0ttI85h6PU+LsZNN91U8V4PRgcEmqJMB8x9fnb77bdP20Zc
P8NkGIcO2GvNhn333beS7UcP6nUeaKo1G4IOODrxmVPn2qdlRswf+vn8jf7k
1gGbMD/TAYfTbwvcVAecrQHGdWSMtzh3Lu79O/W8ll1var/99is8ToY5Ny/2
pWib/awBoAOmM2gHPO+88wqf52Hmc93X8E2N+OdlLF68eOM24vfFOaeTYRw6
4KjnmfF+Msd5pg44OkceeeRQc8wqXlOZLrcOGHOEqX2JtUnKOOyww7I+bnRA
oCnKdMDc52fdn2HEXI3JMA4dcNRrNhR9Rhsj5ZoNQQccjZiPf/zjH69kbhZz
iL/9279N/S1NhNw6YBPmZzrg8PppgbN1QA1w8sW9PTqf27L3/J+6Prl7DKPz
fh+dI9Yz2hQdMJ1BO2D39ahT4+677y69D1dddVXhNpctW1ZqezHn7dzOMOfC
ko9x6IC9Xlurep923333ZTnP1AFHI9aTr2KOOTViXcEy664yXW4dMMTa8WXv
g33WWWf1PGZyuaZeBwSaokwHHIf5Wfw96dxOXE/D+Mu9A862ZkM/n1P1Y+nS
pYXbT7lmQ9ABR2PJkiWVzs8+8IEP9PU6z+xy64Bh0udnOmA1NtUC77rrrhn/
PDqgBtgMna0tzqmL9zVl7LLLLoXHyzA6r8HqHP3c91oHTGfQDnjEEUcUPs/3
3HNP6X2I+8sUbfP8888vtb045zS6yNR24vpXxl/uHbDJ80wdcDT+3b/7d5XO
M2P81//6X1N/W2Mvxw5YVq+/vzFibpcLHRBoijIdcBzmZ/FZaOd24l6mjL/c
O+CDDz5YeBxXuWbD7rvvXvg1Uq7ZEHTA6q1Zs6a12WabVT4/O+OMM1J/a2Mv
xw5Y1rjMz3TA6szWAn/3d393xj+LPlj032qAk+WFF16Y9vyecMIJpbe13Xbb
FR4zw+i1ftFDDz20ycfqgOkM2gEPPPDAwud5mPVpe/2dK7P+xJTTTjtt2rZe
fPHF0tsiD7l3wDrmmb3ua5N6nqkDVq97LZ2qxpvf/Ob2uYmUNykdMF4/ex0n
cW3zMGtGV00HBJqiTAccl/nZrrvuunE78XkX4y/3Dtjrnrlxfn0VZjsPNOWa
DUEHrF6va6+HHR/84AdTf2tjb1I64DjNz3TAas3WAvsZGuDk6V6r+8knnyy9
ra233rrwuBnGZz/72cJt9nMc6oDpDNoBDzrooMLneZjzTa+88srCbV588cWl
txnrUnZuq6r7/5NO7h2wyfNMHbB6cY3nKOaZMc4+++zU395Ym4QOeP/99/d8
Pdlxxx2zm8PpgEBTlOmA4zI/i/PWOrf16KOPlt4Weci9A456zYYHHnigcPup
12wIOmD1/sN/+A8jm58Nc94Gk9EBx21+pgNWL97zxbE76OvHlltuqQFOoOhj
U8/x3Llzh9rWNttsU3jsDOPTn/504TbdFzRvg3bAXvcgXrFiRel96LUO/TDn
m4b58+dv3NYOO+ww1LaqEOtg/M3f/E27XRmDjyOPPHLGMXJrRh1w1PPMXtcb
5jDPLOqA++yzT/JjZlzHLbfc0vq1X/u1kc0z436jqb/HcR4f//jHp/08x60D
Pv744605c+YUHhtxntjzzz+fehdnKOqAcd1/6mNhXEdcbwzkqUwHHJf5WXw+
2PkZ59FHH116W1V59tlnk78mj/MouidmLh1wtnMoH3vssUq+Rq/zQFOv2RCK
OuApp5yS/JgZ11F0TnKVY88990z+PY7zeP/73z/t5zluHXAc52dFHTDONUh9
LIzrmDoXYNDrAjuvA/y7v/u75N/HJIw777wz5a9WW7S0zuf52muvHWp7o7gv
aOfahZ0jrsvaFB0wnUE7YFGLibF8+fLS+3DppZcWbvOGG24ovc1w/fXXT9ve
qlWrhtreMC688MKRvm9s6ojX6BzMNs+MEe/phh29tp/DPLOoAxpGU8Y4dcC1
a9dOWz+3c8TrTNm17EetqAMaw413vetd7Z8rkJcyHXCc5med9zCNe+envMfZ
vvvum/y1eBJHLh2w1zmUMaqYm/X6zD5G6jUbQlEHNIymjHHqgOM6PyvqgMZw
41/8i3/Rbnn9tsDOBviv//W/Tr7/kzTivPzbbrst2e/XUUcdtXFf4rPgYa+1
7by2sHMMI679KNrm+vXrN/lYHTCdQTvg8ccfX/g8x3VuZS1btqxwm3fccUfp
bYZXXnllWjtJuf7yv/23/zb569gkjlw64GzzzFGPHOaZOqDR5DEuHXDDhg09
3//F38qVK1em3sWedMDRjF122SX1Uwt0KdMBx2l+dt99903b3jD3Lh3GCy+8
0Hrb296W/HV4EkcuHbDXtXp1jNRrNgQd0GjyGJcOOM7zMx1wNCP6T4ju82/+
zb/p+d+94x3v2NgAr7vuuuT7PYnjM5/5TLLfr85Ws//++w+9vV5d+bXXXiu9
ze71cqZGXCezKTpgOoN2wF7XtfXz2F4uuOCCwm3G/bGHEXOQzg545plnDrW9
YTg3YzQjlw7Ya54Z92COeyYPO3pdbx0jh3mmDmg0eYxDB4z3d7vttlvP7yH3
+0TqgKMZOiDkp0wHHKf52b333jtte6nWxIpzld/+9rcnfx2exJFLB+y1ZkOs
sVPF/KzXWjs5rNkQdECjyWMcOuC4z890wNGMqQ4Y9ttvv57/3fve976N/92N
N96YfL8ncaTsgJ3vMarogHHv6aLvsZ95Ri8LFy6csb1oMP3QAdMZtAN+/etf
Lzx24jks66yzzirc5urVq0tvM3S/9025Fn1ci5j6NWwSRy4dsNc886qrrqpk
+93nTk+NXOaZOqDR5DEOHfBzn/tcz/2Pv5W50wGrH+4LCnkq0wHHaX7W+blh
3Be0n3OGR8V9QUczcuiAs63ZMHX9xLCWLl1auP0c1mwIOqDR5DEOHXDc52c6
YPUj7gv6yCOPtH++vdZ+7hyf+MQn2vfBC7GOZOr9n6SR+r6gxx133MZ9qeK+
oAcddFDh9znM2qPz58+fsb14b98PHTCdQTtgrJdZdOwM0zsOP/zwwm3Guu3D
2HXXXTduK66BTe2ll15q358n9Zqn4zqK1j65NYMOWMc88+yzzy7cfi7zzKIO
GPeKTn3MjPP4wAc+MLL3NB/5yEeSf3/jPD7+8Y9P+3nm3gE730N2j3PPPTf1
7vWlqAOedtppyY+FcR3D3tcPGJ0yHXBc5mfxvXS+Z46/T6nF95P6NXmcx+67
7z7jGMmhAz700EOFx+8WW2xR2dfodR1PDms2hKIOeMoppyQ/ZsZ1fPOb32y9
+c1vHtn87E//9E+Tf4/jPN7//vdP+3nm3gEnYX5W1AG//e1vJz8WxnV03h+h
nwY4NTpb4P/7f/8v+fcxCePuu+9O9Wu10WOPPTbteb7mmmuG2t6pp55aePw8
+eSTpbe53Xbbzdhe9Oh+6IDpDNoBo2sUHTvnn39+6X3otbbkMPep7d7PK6+8
svS2yMNXv/rVGcdIvEanZp5Z3AG//OUvp96tsTbb+YHDjv/9v/936m9vrHXf
Bz3nDnjJJZf0PA6WLFmSevf6VtQBv/Od76TeLYDKlemA4zI/u/rqq6dt6/HH
Hy+9LfLwhS98YcYxkkMHjGO/6PhdvHhxJduP34Ne54HmsGZDKOqA8Rk95XV+
dlb1WLFiRepvb6xttdVW036eOXfASZmfFXXAYa9Zovd5WFtuuWXrox/9aOG/
i2tgmDw777zzxuc47mk+jDg3sOjYic+zy5ozZ86M7fW7nzpgOoN2wFD0XJ94
4oml96Hz2K7qODjppJM2biveo8f6u4y3XDugeaYOOArReEc1z8x5vfFxMC4d
8IYbbuh5DMS90N54442BtxnvE5YvXz6CvZ2dDgg0RZkOGMZhfhZrkk5ty/qk
kyHXDjjqNRu617mcGrms2RB0wOodeuihI5mb/cqv/Eqp9+X8k3HpgJM0P9MB
q9frOsDf/M3fbJ/zFT/fuNdd0X/TeV0gk6H7M/Bhrt17+OGHC4+bsvcJev31
1wu3F/fx64cOmE6ZDrjHHnvMeK6HWbey6D7GBx54YOntxd/OuBZraltxXQ3j
L9cO2GueWdU1qOMwz9QBqxefoXS+jlU1cp0TjZNx6IB33XVXz2MgztF69dVX
B95mnKc8tY2613PSAYGmKNsBc5+fxbV/nduKawMZfzl2wNnWbHjiiScq+Rq9
1s/MZc2GoANWL+7T9va3v73y+dlRRx2V+lsbe+PQASdtfqYDVmtTDXCKFtgc
cT1T5/uZYc7v6/XeqOz78R//+MeFx+B1113X1+N1wHTKdMDTTz+98O9WWUXH
4hVXXFF6e7EGX+e2Ys0Mxl+OHdA88xd0wNGI1+Qq55hve9vbWo8++mjqb2vs
5d4Bf/jDH/Z8XYp7uL/44oulthuf/8Y2UpyDoAMCTVG2A+Y+P+tcCym23e/3
Rd5y7IC91mzYfPPNK/sa8+fPL/wauazZEHTA0YhrHaqcn8Wa8Kl/ZyZB7h1w
EudnOmB1+m2AU7TA5ohz+qae27hOYJjeP2/evBnHS6wbXMYDDzxQePz1e89/
HTCdMh2w6PqksmuhrVu3rvDYee6550ptL8T19FPb6XeNSvKXYwc0z/wFHXB0
jjjiiMrmmZdeemnqb2ci5NwB43ex13Wk8c/jvK0yOs9FS7FuhQ4INEXZDpjz
/Cw+s4j3xlPbOeCAA0pth/zk2AF7rdmw3377VbL9cVizIeiAoxHPf9F9k8uM
mEPcc889qb+liZBzB5zU+ZkOWI1BG+AULbAZOq/5jfG9732v9LaKrjH57Gc/
W2pbRfc4jr7ULx0wnTIdMMQ5K93P+Zo1awb++tdff/2M7ey2224Db2fK+vXr
p23rjDPOKL0t8pJjBzTP/AUdcLSKPmMZdJx55pmpv42JkWsHfOGFF6b9Te8c
8TqyatWq0tuO+xxPbevuu++ucK/7owMCTVG2A4Zc52e33HLLtG353Hty5NgB
e63ZMMz1rJ3GYc2GoAOOzksvvdT6/d///aHmZjF/GOTzN2aXawec5PmZDji8
sg1wyqZaYHyeyPjrvFd/XPdUVpzP132clL12aupa5M6xdOnSvh+vA6ZTtgNe
dtllM57zMtcndV67NzX6vZ9skUsuuWTatnJqJQwnxw64cOHCwr+5l19+eSXb
H5d5pg44el/5yldab33rWweeY77nPe9pfetb30q9+xMlxw4Y5/vtsssuPY+D
YT9z3WGHHdrbmTNnTu1rTwQdEGiKYTpgrvOzzr+b22yzTentkJ/cOuBsazbE
2m5VGIc1G4IOOFrx+fr//J//c+C5WYwtt9yy9fDDD6f+FiZKjh1w0udnOuBw
hm2AU2ZrgZ/85Ce1wAnQ/b4jrn8qa5999plxnMTnuYN44403pt3no8x2dMB0
ynbA7vUqY8S9ZgdRdK1TXBc/zPXL22+//cZtDXPeKvnJrQOaZ/4THbAeK1eu
bP3u7/5u33PMP/qjP2o988wzqXd74uTWAeO1aO+99+55HAz7mc8PfvCDjduK
875S0AGBphimA+Y4P3v++eenbWuQc4XJX24dMN4rF70XatqaDUEHrEecbxmf
2/czN4tzOg855JD2azXVyq0DNmF+pgOWV1UDnKIFTra4vqnzOR1mvZ8777xz
xjESa4wP4v7775+xjeiLg9AB0ynbAcMFF1ww47m/7777+n58UdcZ5v3z3/3d
303bVhxXTI7cOmAd88xo2eMwz9QB6xXzzcMPP7z1n/7Tf2o3qKmf+a/+6q+2
5s6d2zr66KNb//f//t/UuzmxcuuAveYRMeI60mEdeuihG7c3zP3oh6EDAk0x
TAcMuc3PLrzwwmnbKnOfUvKVWwcsOv5jLFq0qJLtj8uaDUEHrE8c8/Fedf/9
9299+MMfnnYPlw9+8IOtPfbYo/056zD3gGR2uXXAJszPdMByqm6AU7TAybb7
7rtX1s323HPPacdHXFMc9zDuV6wp2H2MPfnkkwPtgw6YzjAdMHQeizHifNG1
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
AAAAAAAAAABsoP8A6ZAvzA==
     "], {{0, 184.}, {897., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdUU9kWhs+96SGhJYQiJfQmSCeAlBBaAAXpYCMkIYQSYgrNjogjOBZU
RLCioyIKjgWQsSKKbVBUsDsgg4AyDhZsqLwbWISZeeu9t95ea9/z3Z19/lPW
PVn7GKdkR6XCAAApHnlEcXKZEgknP1odeYkVSYUCEZ/HFsn4Ar6EkQIhQXUy
8gBkdY5YnAkjWVkimSQq2J+ekJhExw0AAoABFTgALIcrFTMjI8MV2ZPt3+1D
F1AIgrt2Cq1///2/mgaPL+UCAEUinMKTcrMQPon4S65YIgMAtQeJm+bKxApu
RZgqQSaI8AMFCyZ4SMEp44wG4zkxUSyEqQDgSRyORAAAiY7E6TlcAaJD8kPY
QcQTihAWI+yTlZXNQ/gYwlZIDhIjKfQZKX/REfxNM0WpyeEIlDyxlnHDBwil
4kxO/v+5Hf/bsjLlk2NYIE5Kk4REIa0msmcPMrLDlCxKmR0xyULeeP44p8lD
YieZK2UlTTKPExCm7Js5O3ySU4VBbKWOjB0zyXxpYPQkS7KjlGOlSljMSeZI
psaVZ8Qq42l8tlK/IC0mfpJzhHGzJ1maER02lcNSxiXyKOX8+aJg/6lxg5Rr
z5L+Zb1CtrKvLC0mRLl2ztT8+SLmlKY0QTk3Hj8gcConVpkvlvkrxxJnRirz
+ZnByrg0J1rZV4Z8kFN9I5V7mM4JjZxkwALZIBNxCaCDcOQtAAAZP0+mWAgr
W5wvEQrSZHQmcsL4dLaIaz+d7uTg5AKA4rxOfA7vaOPnEKJdn4oVvgfAmzc2
NnZmKhZuBsDJ1QAQX0zFLM8BoKoNwNVSrlySMxEbP0sYQARqyD+BLjAEpsAK
2AEn4Aa8gB8IBKEgAsSARLAAcEEayEJmnguWgJWgGJSCjWArqAS7wT5wCBwF
x0EjOAMugivgBrgNOsFj0A36wCswDD6AUQiCcBAZokC6kBFkDtlCThAD8oEC
oXAoCkqEkiEBJILk0BJoFVQKlUGV0F6oBvoZOg1dhK5BHdBDqAcahN5CX2AU
TIKpsAFsAc+AGTATDoNj4PmwAF4EF8BF8Hq4Aq6Gj8AN8EX4BtwJd8Ov4BEU
QKmgaChjlB2KgWKhIlBJqFSUBLUMVYIqR1Wj6lDNqDbUXVQ3agj1GY1FU9B0
tB3aCx2CjkVz0YvQy9Dr0JXoQ+gGdCv6LroHPYz+jiFj9DG2GE8MG5OAEWBy
McWYcswBzCnMZUwnpg/zAYvF0rCWWHdsCDYRm45djF2H3Ymtx17AdmB7sSM4
HE4XZ4vzxkXgODgZrhi3HXcEdx53B9eH+4RXwRvhnfBB+CS8CF+IL8cfxp/D
38H340cJ6gRzgichgsAj5BM2EPYTmgm3CH2EUaIG0ZLoTYwhphNXEiuIdcTL
xCfEdyoqKiYqHipzVIQqK1QqVI6pXFXpUflM0iTZkFikeSQ5aT3pIOkC6SHp
HZlMtiD7kZPIMvJ6cg35EvkZ+ZMqRdVela3KU12uWqXaoHpH9bUaQc1cjam2
QK1ArVzthNottSF1grqFOkudo75MvUr9tPp99RENioajRoRGlsY6jcMa1zQG
NHGaFpqBmjzNIs19mpc0eykoiimFReFSVlH2Uy5T+qhYqiWVTU2nllKPUtup
w1qaWi5acVp5WlVaZ7W6aSiaBY1Ny6RtoB2nddG+aBtoM7X52mu167TvaH/U
mabjp8PXKdGp1+nU+aJL1w3UzdDdpNuo+1QPrWejN0cvV2+X3mW9oWnUaV7T
uNNKph2f9kgf1rfRj9JfrL9P/6b+iIGhQbCB2GC7wSWDIUOaoZ9huuEWw3OG
g0YUIx8jodEWo/NGL+ladCY9k15Bb6UPG+sbhxjLjfcatxuPmliaxJoUmtSb
PDUlmjJMU023mLaYDpsZmc0yW2JWa/bInGDOME8z32beZv7RwtIi3mKNRaPF
gKWOJduywLLW8okV2crXapFVtdU9a6w1wzrDeqf1bRvYxtUmzabK5pYtbOtm
K7TdadsxHTPdY7poevX0+3YkO6Zdjl2tXY89zT7cvtC+0f71DLMZSTM2zWib
8d3B1SHTYb/DY0dNx1DHQsdmx7dONk5cpyqne85k5yDn5c5Nzm9cbF34Lrtc
HrhSXGe5rnFtcf3m5u4mcatzG3Q3c0923+F+n0FlRDLWMa56YDz8PZZ7nPH4
7OnmKfM87vmnl51Xhtdhr4GZljP5M/fP7PU28eZ47/Xu9qH7JPvs8en2Nfbl
+Fb7Pvcz9eP5HfDrZ1oz05lHmK/9Hfwl/qf8P7I8WUtZFwJQAcEBJQHtgZqB
sYGVgc+CTIIEQbVBw8GuwYuDL4RgQsJCNoXcZxuwuewa9nCoe+jS0NYwUlh0
WGXY83CbcEl48yx4VuiszbOezDafLZrdGAEi2BGbI55GWkYuivxlDnZO5Jyq
OS+iHKOWRLVFU6IXRh+O/hDjH7Mh5nGsVaw8tiVOLW5eXE3cx/iA+LL47oQZ
CUsTbiTqJQoTm5JwSXFJB5JG5gbO3Tq3b57rvOJ5XfMt5+fNv7ZAb0HmgrML
1RZyFp5IxiTHJx9O/sqJ4FRzRlLYKTtShrks7jbuK54fbwtvkO/NL+P3p3qn
lqUOCLwFmwWDab5p5WlDQpawUvgmPSR9d/rHjIiMgxljmfGZ9Vn4rOSs0yJN
UYaoNdswOy+7Q2wrLhZ3L/JctHXRsCRMckAKSedLm2RUpDC6KbeSr5b35Pjk
VOV8yo3LPZGnkSfKu5lvk782v78gqOCnxejF3MUtS4yXrFzSs5S5dO8yaFnK
spblpsuLlvetCF5xaCVxZcbKXwsdCssK36+KX9VcZFC0oqh3dfDq2mLVYknx
/TVea3b/gP5B+EP7Wue129d+L+GVXC91KC0v/bqOu+76j44/Vvw4tj51ffsG
tw27NmI3ijZ2bfLddKhMo6ygrHfzrM0NW+hbSra837pw67Vyl/Ld24jb5Nu6
K8Irmrabbd+4/WtlWmVnlX9V/Q79HWt3fNzJ23lnl9+uut0Gu0t3f9kj3PNg
b/DehmqL6vJ92H05+17sj9vf9hPjp5oDegdKD3w7KDrYfSjqUGuNe03NYf3D
G2rhWnnt4JF5R24fDTjaVGdXt7eeVl96DByTH3v5c/LPXcfDjrecYJyoO2l+
cscpyqmSBqghv2G4Ma2xuymxqeN06OmWZq/mU7/Y/3LwjPGZqrNaZzecI54r
Ojd2vuD8yAXxhaGLgou9LQtbHl9KuHSvdU5r++Wwy1evBF251MZsO3/V++qZ
a57XTl9nXG+84Xaj4abrzVO/uv56qt2tveGW+62m2x63mztmdpy743vn4t2A
u1fuse/d6Jzd2dEV2/Xg/rz73Q94DwYeZj588yjn0ejjFU8wT0qeqj8tf6b/
rPo369/qu926z/YE9Nx8Hv38cS+399Xv0t+/9hW9IL8o7zfqrxlwGjgzGDR4
++Xcl32vxK9Gh4r/0Phjx2ur1yf/9Pvz5nDCcN8byZuxt+ve6b47+N7lfctI
5MizD1kfRj+WfNL9dOgz43Pbl/gv/aO5X3FfK75Zf2v+Hvb9yVjW2JiYI+GM
lwIoxOHUVADeHkTuDIkAUG4j9cPciXp63KCJO8A4gf/EEzX3uLkBUIc0irKI
dQGAY4hbrEC0/QBQlEQxfgB2dlb6ZO07XqcrDIvcWPYEKOjh5vkrwD9soob/
y7z/2QKFqgv4Z/svxnUTUA==
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> <|"XMP" -> <||>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{674.4564819335938, Automatic},
   ImageSizeRaw->{897., 184.},
   PlotRange->{{0, 897.}, {0, 184.}}]],ExpressionUUID->
  "9a269b41-9d0c-4f9b-b85a-ad6e129373a6"],
 "\n\nTherefore, with suitably appended SWAP gates, one can compute the \
action of a given ",
 StyleBox["j",
  FontSlant->"Italic"],
 "-to-",
 StyleBox["k",
  FontSlant->"Italic"],
 " gadget ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["g", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\mathfrak{g}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a519e95d-8f6e-46a9-a6f1-89bcf550cd42"],
 " using the following formula:\n\n\t\t\t\t",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         RowBox[{"(", 
           StyleBox["g", "TI"], ")"}], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["I", "TI"], 
          StyleBox["k", "TI"]], "\[CircleTimes]", 
         RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], "1"], "\[Ellipsis]", 
             SubscriptBox[
              StyleBox["b", "TI"], 
              RowBox[{
                StyleBox["j", "TI"], "-", 
                StyleBox["k", "TI"]}]], "|", 
             StyleBox["Q", "TI"], 
             RowBox[{"(", 
               StyleBox["g", "TI"], ")"}], 
             SubscriptBox[
              StyleBox["I", "TI"], 
              StyleBox["k", "TI"]], "\[CircleTimes]", "|", 
             SubscriptBox[
              StyleBox["a", "TI"], "1"], "\[Ellipsis]", 
             SubscriptBox[
              StyleBox["a", "TI"], 
              RowBox[{
                StyleBox["j", "TI"], "-", 
                StyleBox["k", "TI"]}]]}], "\[RightAngleBracket]"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "\\mathscr{A}(\\mathfrak{g}) = I_k \\otimes \\langle b_ 1 \\dots b_{j - \
k}| Q(\\mathfrak{g}) I_k \\otimes | a_ 1 \\dots a_{j-k} \\rangle", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7ca9acbb-d1e6-493e-8ed8-096710e0ae4f"],
 "\n\t\t\t\t\t\t\t\t\t\t\nIndeed, this is the same formula as given in the \
paper, but it is far easier to implement algorithmically. The cost, of \
course, is that we need to modify the gadgets in this notebook with the \
correct SWAP gates. This is very easy to do, though. Using ",
 Cell[BoxData[
 "AncillaVector"], "InlineCode",ExpressionUUID->
  "310933e8-5e5f-4f86-ba9c-6df52833ac64"],
 " and ",
 Cell[BoxData[
 "PostVector"], "InlineCode",ExpressionUUID->
  "b7a84e5f-c02c-4572-b841-567a5697eba6"],
 ", we have implemented this function below as ",
 Cell[BoxData[
 "GadgetAction"], "InlineCode",ExpressionUUID->
  "1b553fb7-7280-4607-9a01-d642e48cd850"],
 ", where the input ",
 Cell[BoxData[
 "M"], "InlineCode",ExpressionUUID->"6862ea6a-ac08-44a0-a4c5-85d1b2e51fa5"],
 " specifies the quantum circuit internal to the gadget (",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["Q", "TI"], "(", 
         StyleBox["g", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "Q(\\mathfrak{g})", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "89966189-57b3-40de-8770-6a0302d8bf73"],
 " in the formula above). Its normalized counterpart is ",
 Cell[BoxData[
 "NormalizedGadgetAction"], "InlineCode",ExpressionUUID->
  "0db0500f-e3dc-4a01-b9fb-38f2ce2cd5f6"],
 "."
}], "Text",
 CellChangeTimes->{{3.934481370076996*^9, 3.934481630002863*^9}, {
  3.934481849104783*^9, 3.934481851005392*^9}, {3.93454041810282*^9, 
  3.934540431319385*^9}, {3.934540461427594*^9, 3.9345405040403976`*^9}, {
  3.934544435784204*^9, 3.9345445091478977`*^9}, {3.9345445645500097`*^9, 
  3.934544629137607*^9}, {3.934544663513989*^9, 3.9345446841952753`*^9}, {
  3.934546658837858*^9, 
  3.934546694688183*^9}},ExpressionUUID->"fce78366-aa02-4f54-9821-\
20c54b9ba8a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GadgetAction", "[", 
    RowBox[{"M_", ",", " ", "AncillaBits_", ",", " ", "PostBits_"}], "]"}], 
   " ", ":=", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{
        RowBox[{"DimensionSquareMatrix", "[", "M", "]"}], " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"Length", "[", "AncillaBits", "]"}], ")"}]}], ")"}]}], 
       "]"}], ",", " ", 
      RowBox[{"PostVector", "[", "PostBits", "]"}]}], "]"}], ".", "M", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{
        RowBox[{"DimensionSquareMatrix", "[", "M", "]"}], " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"Length", "[", "AncillaBits", "]"}], ")"}]}], ")"}]}], 
       "]"}], ",", " ", 
      RowBox[{"AncillaVector", "[", "AncillaBits", "]"}]}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"M_", ",", " ", "AncillaBits_", ",", " ", "PostBits_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"NormalizedMatrix", "[", 
   RowBox[{"GadgetAction", "[", 
    RowBox[{"M", ",", " ", "AncillaBits", ",", " ", "PostBits"}], "]"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{
  3.932642931381105*^9, {3.9326513208235397`*^9, 3.932651331873823*^9}, {
   3.932651938444599*^9, 3.932651970874749*^9}, {3.9326524678853607`*^9, 
   3.932652475483457*^9}, {3.932724630777109*^9, 3.9327246343303556`*^9}, {
   3.932744966103208*^9, 3.932745026632979*^9}, {3.932770553062214*^9, 
   3.932770557028439*^9}, {3.932824298722278*^9, 3.932824360340135*^9}, {
   3.933070447294024*^9, 3.933070479417543*^9}, {3.933070544071854*^9, 
   3.933070553951776*^9}, {3.933071105396778*^9, 3.933071113404406*^9}, {
   3.933071147460136*^9, 3.933071196379698*^9}, {3.933071635691291*^9, 
   3.9330716951223917`*^9}, {3.933077239154646*^9, 3.9330772395700617`*^9}, {
   3.934540514583219*^9, 3.934540515211607*^9}, {3.9345445223529663`*^9, 
   3.934544548160956*^9}, {3.934544646105446*^9, 3.934544647326129*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4ea79233-d866-4658-b5cc-2590e629704d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intractability Tests", "Section",
 CellChangeTimes->{{3.934481702020331*^9, 
  3.9344817053671627`*^9}},ExpressionUUID->"7817035d-57d9-454b-ac77-\
fad795931b8b"],

Cell[TextData[{
 "In this section, we implement our algorithms ",
 Cell[BoxData[
 "IsElementary"], "InlineCode",ExpressionUUID->
  "c5bcf3e5-b805-4602-924b-966f21a718e9"],
 ", ",
 Cell[BoxData[
 "IsDiscrete"], "InlineCode",ExpressionUUID->
  "39002d4c-ca96-4538-88f1-8c1898f20cd3"],
 ", and ",
 Cell[BoxData[
 "IsLoxodromic"], "InlineCode",ExpressionUUID->
  "1f3971da-534a-46bc-b1ba-fb8d0038b183"],
 ". All cells in this section can be evaluated simultaneously. "
}], "Text",
 CellChangeTimes->{{3.934536620174535*^9, 3.93453665925558*^9}, 
   3.934550017507924*^9},ExpressionUUID->"c1dbb8d2-23c6-4481-bdf4-\
cc5e6dfccf0c"],

Cell[CellGroupData[{

Cell["Elementarity Test", "Subsection",
 CellChangeTimes->{{3.932645837953382*^9, 3.9326458801620197`*^9}, {
  3.9328262128134203`*^9, 
  3.9328262131071033`*^9}},ExpressionUUID->"60752b36-8458-4f19-a79c-\
bcb75ba07688"],

Cell[TextData[{
 "Here, we implement our test of elementarity, ",
 Cell[BoxData[
 "IsElementary"], "InlineCode",ExpressionUUID->
  "8565d5fe-142b-4711-9a3e-434fbcc49ac7"],
 ", which does the following:\n\tInput: A finite set \[CapitalGamma] such \
that \[CapitalGamma] generates a subgroup of SL(2;C)\n\tOutput: ",
 Cell[BoxData[
  RowBox[{"NON", "-", "ELEMENTARY"}]], "InlineCode",ExpressionUUID->
  "fa7fd556-ae34-4fc3-9f0e-8c917b5d2c6d"],
 " if \[CapitalGamma] generates a non-elementary group, ",
 Cell[BoxData[
 "IDK"], "InlineCode",ExpressionUUID->
  "75d869ac-7fb8-42f1-bff0-86df66ada583"],
 " otherwise\n\nWe first define the two parameters \[Beta] and \[Gamma]:"
}], "Text",
 CellChangeTimes->{{3.932645930089025*^9, 3.932645945695126*^9}, {
   3.932747674739204*^9, 3.932747682373266*^9}, {3.934535909306891*^9, 
   3.934535945545089*^9}, 3.934536021946373*^9, {3.934536099142541*^9, 
   3.934536139919125*^9}, {3.934536189440505*^9, 3.934536190890465*^9}, {
   3.934536791511941*^9, 
   3.934536793151454*^9}},ExpressionUUID->"4cfcd2f8-9f7b-4c6b-9ac8-\
57336505c517"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", "g_", "]"}], ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "4"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"g", ".", "h", ".", 
      RowBox[{"Inverse", "[", "g", "]"}], ".", 
      RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "-", " ", "2"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{3.9345359038728333`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"d04f1a09-9c5f-4103-8e71-55c8d50bbf39"],

Cell[TextData[{
 "Next, we define the subtests that appear in ",
 Cell[BoxData[
 "IsElementary"], "InlineCode",ExpressionUUID->
  "9c92c58b-40f4-41ec-b5c6-50029649c900"],
 ", and we compose all three in the function ",
 Cell[BoxData[
 "IsElementarySubtestFull"], "InlineCode",ExpressionUUID->
  "9dbf38fe-d407-4218-9c6b-6375bc751a67"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9345359551972*^9, 3.9345360281988697`*^9}, {
  3.9345360893200817`*^9, 
  3.934536089536873*^9}},ExpressionUUID->"82abac82-7cbd-466a-ae13-\
3a846e3446ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IsElementarySubtest1", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RealValuedNumericQ", "[", 
      RowBox[{"\[Beta]", "[", "g", "]"}], "]"}], " ", "&&", " ", 
     RowBox[{"RealValuedNumericQ", "[", 
      RowBox[{"\[Beta]", "[", "h", "]"}], "]"}], " ", "&&", " ", 
     RowBox[{"RealValuedNumericQ", "[", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"g", ",", "h"}], "]"}], "]"}]}], ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Between", "[", 
        RowBox[{
         RowBox[{"\[Beta]", "[", "g", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], " ", "&&", " ", 
       RowBox[{"Between", "[", 
        RowBox[{
         RowBox[{"\[Beta]", "[", "h", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], " ", "&&", " ", 
       RowBox[{"Between", "[", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"g", ",", "h"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"\[Beta]", "[", "g", "]"}]}], "*", 
            RowBox[{
             RowBox[{"\[Beta]", "[", "h", "]"}], "/", "4"}]}], ",", " ", 
           "0"}], "}"}]}], "]"}]}], ",", " ", "\"\<ELEMENTARY\>\"", ",", " ", 
      "\"\<IDK\>\""}], "]"}], ",", " ", "\"\<IDK\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsElementarySubtest2", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", "0"}], ",", " ", 
    "\"\<ELEMENTARY\>\"", ",", " ", "\"\<IDK\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsElementarySubtest3", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "[", "g", "]"}], " ", "==", " ", 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "h"}], "]"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "h", "]"}], " ", "==", " ", 
        RowBox[{"-", "4"}]}]}], ")"}], " ", "||", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "[", "h", "]"}], " ", "==", " ", 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "h"}], "]"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "g", "]"}], " ", "==", " ", 
        RowBox[{"-", "4"}]}]}], ")"}], " ", "||", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "[", "g", "]"}], "==", " ", 
        RowBox[{"-", "4"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "h", "]"}], " ", "==", " ", 
        RowBox[{"-", "4"}]}]}], ")"}]}], ",", " ", "\"\<ELEMENTARY\>\"", ",", 
    " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsElementarySubtestFull", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IsElementarySubtest1", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", "\"\<ELEMENTARY\>\""}],
      " ", "||", " ", 
     RowBox[{
      RowBox[{"IsElementarySubtest2", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", "\"\<ELEMENTARY\>\""}],
      " ", "||", " ", 
     RowBox[{
      RowBox[{"IsElementarySubtest3", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<ELEMENTARY\>\""}]}], ",", " ", "\"\<ELEMENTARY\>\"", ",", " ", 
    "\"\<NON-ELEMENTARY\>\""}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.932645901249054*^9, 3.932645920775828*^9}, {
   3.932645965449017*^9, 3.932646137486308*^9}, {3.932646183017065*^9, 
   3.9326462953886003`*^9}, {3.932646330646008*^9, 3.932646353124011*^9}, {
   3.932646383960083*^9, 3.932646385231567*^9}, {3.932646521588724*^9, 
   3.932646535405793*^9}, {3.93264658925005*^9, 3.932646617905353*^9}, {
   3.9326466498877068`*^9, 3.93264672071959*^9}, {3.932646783881899*^9, 
   3.932646790613879*^9}, {3.932646897010751*^9, 3.9326469912696743`*^9}, {
   3.932647115673415*^9, 3.932647144449342*^9}, {3.9326472716001987`*^9, 
   3.932647278338936*^9}, {3.9326499370948477`*^9, 3.932650035070853*^9}, {
   3.932650067662236*^9, 3.9326500854354753`*^9}, {3.932650236215191*^9, 
   3.932650333037966*^9}, {3.9326503807045193`*^9, 3.932650403135253*^9}, {
   3.932650462073699*^9, 3.932650618723949*^9}, {3.9326506656050386`*^9, 
   3.932650678457303*^9}, {3.932650732059058*^9, 3.932650795699111*^9}, {
   3.932727562192449*^9, 3.9327275632690763`*^9}, {3.932735262172864*^9, 
   3.93273528039884*^9}, {3.932735340509802*^9, 3.93273535288091*^9}, {
   3.932735640839281*^9, 3.932735645257021*^9}, {3.932735723929818*^9, 
   3.932735726946143*^9}, {3.9327357928948927`*^9, 3.9327357941741123`*^9}, {
   3.932735847906344*^9, 3.932735952492551*^9}, {3.9327359848201714`*^9, 
   3.932735898434759*^9}, {3.932737731604821*^9, 3.9327377582548313`*^9}, {
   3.932745093884616*^9, 3.932745094639598*^9}, {3.932746106438202*^9, 
   3.93274617462341*^9}, {3.932746229070725*^9, 3.932746236303384*^9}, {
   3.932747060300949*^9, 3.9327471025319147`*^9}, {3.932747242157724*^9, 
   3.932747294307975*^9}, {3.932748069900518*^9, 3.932748072158041*^9}, {
   3.932748132850162*^9, 3.9327481718570232`*^9}, {3.932749943619087*^9, 
   3.9327500954482813`*^9}, {3.932815807651812*^9, 3.9328158990358143`*^9}, {
   3.932816213304117*^9, 3.9328162147152433`*^9}, {3.932816273827744*^9, 
   3.932816306495201*^9}, {3.932854364700283*^9, 3.932854408282277*^9}, {
   3.9328545028783207`*^9, 3.932854506990341*^9}, {3.9328554412305727`*^9, 
   3.932855441327675*^9}, {3.932855506666895*^9, 3.9328555170593643`*^9}, {
   3.9328555609849873`*^9, 3.932855652751525*^9}, {3.932855699360846*^9, 
   3.9328556997023373`*^9}, {3.932855841591338*^9, 3.932855842868267*^9}, {
   3.932858073258292*^9, 3.9328580976698847`*^9}, {3.932858133468895*^9, 
   3.932858136593013*^9}, {3.932858169978829*^9, 3.932858222774516*^9}, {
   3.932858424714396*^9, 3.932858425451941*^9}, {3.932858502000866*^9, 
   3.93285850660469*^9}, {3.932893304519598*^9, 3.932893304558351*^9}, 
   3.933093289078198*^9, {3.933341383346203*^9, 3.933341459736495*^9}, {
   3.9345358986465263`*^9, 3.9345358995604897`*^9}, {3.9345360385344143`*^9, 
   3.934536039143346*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a98b0848-3eb9-46df-8090-165106d23bd5"],

Cell[TextData[{
 Cell[BoxData[
 "IsElementary"], "InlineCode",ExpressionUUID->
  "3cda0d99-baa9-49b3-8dbb-9c368cab5ed5"],
 ", then, is got by looping over all pairs of elements in \[CapitalGamma], \
and testing ",
 Cell[BoxData[
 "IsElementarySubtestFull"], "InlineCode",ExpressionUUID->
  "d4cda014-4e31-4cd1-b94e-bc8aaf03140a"],
 " on each pair:"
}], "Text",
 CellChangeTimes->{{3.934536054009182*^9, 3.934536091214157*^9}, {
  3.934536155476727*^9, 
  3.9345361744159946`*^9}},ExpressionUUID->"364bfc26-94ee-46c3-a82d-\
bc6a2f8bd0a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsElementary", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", " ", "=", " ", "\"\<IDK\>\""}], "}"}], ",", " ", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IsElementarySubtestFull", "[", " ", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"\[CapitalGamma]", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], " ", "==", " ", 
          "\"\<NON-ELEMENTARY\>\""}], ",", " ", 
         RowBox[{"output", " ", "=", " ", "\"\<NON-ELEMENTARY\>\""}]}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "\[CapitalGamma]", "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", 
         RowBox[{"Length", "[", "\[CapitalGamma]", "]"}]}], "}"}]}], "]"}], 
     ";", " ", "\n", "\t", "output"}]}], "]"}]}]], "Code",
 CellChangeTimes->{3.9345360434341383`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"1aa607ed-5469-46f8-ac71-a4cae640ea4e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Discreteness Test", "Subsection",
 CellChangeTimes->{{3.932645864514184*^9, 3.9326458845943117`*^9}, 
   3.932826215606248*^9},ExpressionUUID->"de2ffd7d-573b-4abc-8eae-\
6a94ac1bde7c"],

Cell[TextData[{
 "Here, we implement our test of discreteness, ",
 Cell[BoxData[
 "IsDiscrete"], "InlineCode",ExpressionUUID->
  "d473fc7c-1eae-4033-905e-dbb7da61030d"],
 ", which does the following:\n\tInput: A finite set \[CapitalGamma] such \
that \[CapitalGamma] generates a subgroup of SL(2;C)\n\tOutput: ",
 Cell[BoxData[
  RowBox[{"NON", "-", "DISCRETE"}]], "InlineCode",ExpressionUUID->
  "76ea6528-e088-4c7c-a33a-77f12b2593e9"],
 " if \[CapitalGamma] generates a non-discrete group, ",
 Cell[BoxData[
 "IDK"], "InlineCode",ExpressionUUID->
  "70cb9e40-298f-4158-908d-d32d20d4564b"],
 " otherwise\n\nWe first define the eight subtests that appear in this \
algorithm, and then compose them all into the function ",
 Cell[BoxData[
 "IsDiscreteSubtestFull"], "InlineCode",ExpressionUUID->
  "df17b85a-342a-4169-84ed-3daab98b1711"],
 ":"
}], "Text",
 CellChangeTimes->{{3.932750806772434*^9, 3.932750823596764*^9}, {
  3.932824468367906*^9, 3.932824474601259*^9}, {3.934478398376028*^9, 
  3.934478509371736*^9}, {3.93453634341995*^9, 3.934536409294705*^9}, {
  3.934536781030404*^9, 
  3.934536782746851*^9}},ExpressionUUID->"08b867b4-157d-4847-b667-\
3e5265e6e523"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IsDiscreteSubtest1", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IsElementary", "[", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h"}], "}"}], "]"}], " ", "==", " ", 
      "\"\<NON-ELEMENTARY\>\""}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "4"}], 
         "]"}], " ", "+", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"g", ".", "h", ".", 
            RowBox[{"Inverse", "[", "g", "]"}], ".", 
            RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "-", " ", "2"}],
          "]"}]}], "]"}], " ", "<", " ", "1"}]}], ",", " ", 
    "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest2", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], " ", "!=", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "2"}], 
         "]"}], " ", "+", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"g", ".", "h", ".", 
            RowBox[{"Inverse", "[", "g", "]"}], ".", 
            RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "-", " ", "1"}],
          "]"}]}], "]"}], " ", "<", " ", "1"}]}], ",", " ", 
    "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest3", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "==", " ", "1"}], 
      "]"}], " ", "&&", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "!=", " ", "2"}], 
      "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "2"}], 
        "]"}], "]"}], " ", "<=", " ", "0.5"}]}], ",", " ", 
    "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest4", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], "]"}], " ", "!=", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "1"}], 
         "]"}], " ", "+", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Tr", "[", 
          RowBox[{"g", ".", "h", ".", 
           RowBox[{"Inverse", "[", "g", "]"}], ".", 
           RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}]}], "]"}], " ", 
      "<", " ", "1"}]}], ",", " ", "\"\<NON-DISCRETE\>\"", ",", " ", 
    "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest5", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], "]"}], " ", "==", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"Tr", "[", 
         RowBox[{"g", ".", "h", ".", 
          RowBox[{"Inverse", "[", "g", "]"}], ".", 
          RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], "]"}], " ", "<=",
       " ", "0.5"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], " ", "!=", " ", 
      "0"}]}], ",", " ", "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest6", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], "]"}], " ", "==", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"g", ".", "h", ".", 
           RowBox[{"Inverse", "[", "g", "]"}], ".", 
           RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "-", " ", "1"}], 
        "]"}], "]"}], " ", "<=", " ", "0.5"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], " ", "!=", " ", 
      "1"}]}], ",", " ", "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest7", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], " ", "!=", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", 
          RowBox[{"Tr", "[", 
           RowBox[{"g", ".", "h", ".", 
            RowBox[{"Inverse", "[", "g", "]"}], ".", 
            RowBox[{"Inverse", "[", "h", "]"}]}], "]"}]}], "]"}], " ", "+", 
        " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"g", ".", "h", ".", 
            RowBox[{"Inverse", "[", "g", "]"}], ".", 
            RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], " ", "-", " ", "1"}],
          "]"}]}], "]"}], " ", "<", " ", "1"}]}], ",", " ", 
    "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtest8", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Tr", "[", 
        RowBox[{"g", ".", "h", ".", 
         RowBox[{"Inverse", "[", "g", "]"}], ".", 
         RowBox[{"Inverse", "[", "h", "]"}]}], "]"}], "]"}], " ", "==", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], "]"}], " ", "!=", " ", 
      "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Tr", "[", "g", "]"}], "^", "2"}], " ", "-", " ", "1"}], 
        "]"}], "]"}], " ", "<=", " ", "0.5"}]}], ",", " ", 
    "\"\<NON-DISCRETE\>\"", ",", " ", "\"\<IDK\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"IsDiscreteSubtestFull", "[", 
   RowBox[{"g_", ",", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IsDiscreteSubtest1", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest2", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest3", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest4", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest5", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest6", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest7", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}], " ", "||", " ", 
     RowBox[{
      RowBox[{"IsDiscreteSubtest8", "[", 
       RowBox[{"g", ",", "h"}], "]"}], " ", "==", " ", 
      "\"\<NON-DISCRETE\>\""}]}], ",", " ", "\"\<NON-DISCRETE\>\"", ",", " ", 
    "\"\<IDK\>\""}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.932725603983489*^9, 3.932725745728384*^9}, {
   3.9327257987913017`*^9, 3.93272582624688*^9}, {3.93272586359381*^9, 
   3.932725905115501*^9}, {3.932726328026114*^9, 3.932726329338604*^9}, {
   3.932727571990284*^9, 3.932727575054658*^9}, {3.9327276477522373`*^9, 
   3.932727701494087*^9}, {3.932727735691402*^9, 3.932727740320389*^9}, {
   3.932727773676181*^9, 3.9327277887994127`*^9}, {3.93272824179967*^9, 
   3.9327282537131653`*^9}, {3.932735246922772*^9, 3.9327352485219307`*^9}, {
   3.93273535797858*^9, 3.9327353640661907`*^9}, {3.932735971313781*^9, 
   3.932736015923852*^9}, {3.932746341567465*^9, 3.932746352450677*^9}, {
   3.932746464196892*^9, 3.932747038078743*^9}, {3.932747112169442*^9, 
   3.932747158635387*^9}, {3.932747357558839*^9, 3.932747422190833*^9}, {
   3.932747454656663*^9, 3.932747460114753*^9}, {3.9327475901096907`*^9, 
   3.932747594805848*^9}, {3.9327477207579393`*^9, 3.93274787888536*^9}, {
   3.932747934603037*^9, 3.9327479798467712`*^9}, {3.932748045179721*^9, 
   3.932748094599691*^9}, 3.9327481300499973`*^9, {3.932748184030046*^9, 
   3.932748219889189*^9}, {3.932748257473027*^9, 3.932748281859063*^9}, {
   3.9327483137501707`*^9, 3.932748372452948*^9}, {3.93274841279963*^9, 
   3.93274846377743*^9}, {3.932748511892686*^9, 3.932748553399674*^9}, {
   3.932748599951646*^9, 3.932748630793631*^9}, {3.932748700758992*^9, 
   3.932748702676202*^9}, {3.932748736006459*^9, 3.9327488374397087`*^9}, {
   3.932748941293893*^9, 3.932748950581852*^9}, {3.932749056725286*^9, 
   3.932749168421525*^9}, {3.93274930644058*^9, 3.932749377096594*^9}, {
   3.9327494146937523`*^9, 3.932749574724337*^9}, {3.932749619418486*^9, 
   3.932749635167577*^9}, {3.932749878709144*^9, 3.932749902787549*^9}, {
   3.932750109596897*^9, 3.9327501278257303`*^9}, {3.9327501578647547`*^9, 
   3.932750186212818*^9}, {3.932750448433853*^9, 3.932750449268149*^9}, {
   3.932750624254681*^9, 3.9327506786131773`*^9}, {3.9327507425340223`*^9, 
   3.9327507448472767`*^9}, {3.932750843302183*^9, 3.9327508475757303`*^9}, {
   3.932758072347084*^9, 3.932758127389694*^9}, {3.9327684095954227`*^9, 
   3.9327684101074467`*^9}, {3.932768492739994*^9, 3.9327687322275867`*^9}, {
   3.932768843058055*^9, 3.932768882978167*^9}, {3.932768919173377*^9, 
   3.932768941810227*^9}, {3.932769007271207*^9, 3.932769007462797*^9}, {
   3.9327690597834883`*^9, 3.932769061800187*^9}, {3.93276937259688*^9, 
   3.932769375710957*^9}, {3.9327694096546583`*^9, 3.932769410983605*^9}, {
   3.932769452437726*^9, 3.932769456952186*^9}, {3.932815554746956*^9, 
   3.932815612937442*^9}, {3.932815706515141*^9, 3.932815711390216*^9}, {
   3.932815975319173*^9, 3.932816250414016*^9}, {3.93281628344526*^9, 
   3.932816298882145*^9}, {3.932816335213328*^9, 3.932816339127342*^9}, {
   3.9328163752464323`*^9, 3.93281638060709*^9}, {3.9328164753099194`*^9, 
   3.932816509780117*^9}, {3.932816646363638*^9, 3.93281673021832*^9}, {
   3.93281684996249*^9, 3.93281685215415*^9}, {3.932816903223805*^9, 
   3.932816931282591*^9}, {3.9328235836062403`*^9, 3.932823630816367*^9}, {
   3.9328253982001333`*^9, 3.9328254376361113`*^9}, {3.93282605764104*^9, 
   3.9328261311993313`*^9}, {3.932921104863529*^9, 3.932921107561832*^9}, 
   3.933087624476871*^9, {3.934536411967949*^9, 3.9345364124890337`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2d40e3f8-1884-4f22-86d8-d45f8e737062"],

Cell[TextData[{
 Cell[BoxData[
 "IsDiscrete"], "InlineCode",ExpressionUUID->
  "fef80589-cd2e-4e2f-8f90-0810d9be019e"],
 ", then, is got by looping over all pairs of elements in \[CapitalGamma], \
and testing ",
 Cell[BoxData[
 "IsDiscreteSubtestFull"], "InlineCode",ExpressionUUID->
  "d280698b-04f0-485d-a6fe-880221870821"],
 " on each pair:"
}], "Text",
 CellChangeTimes->{{3.934536430053648*^9, 
  3.9345364415439863`*^9}},ExpressionUUID->"09b8959a-08d0-4030-a2b8-\
b1f59aab0f9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsDiscrete", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", " ", "=", " ", "\"\<IDK\>\""}], "}"}], ",", " ", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IsDiscreteSubtestFull", "[", " ", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"\[CapitalGamma]", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], " ", "==", " ", 
          "\"\<NON-DISCRETE\>\""}], ",", " ", 
         RowBox[{"output", " ", "=", " ", "\"\<NON-DISCRETE\>\""}]}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "\[CapitalGamma]", "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", 
         RowBox[{"Length", "[", "\[CapitalGamma]", "]"}]}], "}"}]}], "]"}], 
     ";", " ", "\n", "\t", "output"}]}], "]"}]}]], "Code",
 CellChangeTimes->{3.9345364191226187`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"60592201-f5bb-4b7f-9aa1-cb4392c40c47"]
}, Closed]],

Cell[CellGroupData[{

Cell["Loxodromy Test", "Subsection",
 CellChangeTimes->{{3.9326458731156597`*^9, 3.9326458882624702`*^9}, 
   3.932826218626236*^9},ExpressionUUID->"4188ff0a-6014-4b74-851d-\
3f8556cb615e"],

Cell[TextData[{
 "Here, we implement our test of strict loxodromy, ",
 Cell[BoxData[
 "IsLoxodromic"], "InlineCode",ExpressionUUID->
  "a8c0b322-ca78-41d9-a0d8-9a29a4489ace"],
 ", which does the following:\n\tInput: A finite set \[CapitalGamma] such \
that \[CapitalGamma] generates a subgroup of SL(2;C)\n\tOutput: ",
 Cell[BoxData[
 "LOXODROMIC"], "InlineCode",ExpressionUUID->
  "7007635d-ea49-4de6-8d35-9514bfc4d791"],
 " if \[CapitalGamma] generates a strictly loxodromic group, ",
 Cell[BoxData[
 "IDK"], "InlineCode",ExpressionUUID->
  "a2ea47a8-1bdd-4f6f-9a9f-54d478e9c9a3"],
 " otherwise\n\t\nWe first define the only subtest of strict loxodromy:"
}], "Text",
 CellChangeTimes->{{3.9328244807672367`*^9, 3.9328244886748543`*^9}, {
  3.934536480794301*^9, 3.9345365351739597`*^9}, {3.934536772175969*^9, 
  3.934536775110792*^9}},ExpressionUUID->"e8788c14-8877-43d7-b492-\
01c0ec872e87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsLoxodromicSubtest", "[", "g_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"RealValuedNumericQ", "[", 
     RowBox[{"Tr", "[", 
      RowBox[{"FullSimplify", "[", "g", "]"}], "]"}], "]"}], ",", " ", 
    "\"\<NON-LOXODROMIC\>\"", ",", " ", "\"\<LOXODROMIC\>\""}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.932737404199682*^9, 3.932737471346158*^9}, {
   3.9327375068603983`*^9, 3.932737508329171*^9}, {3.9327376114997177`*^9, 
   3.932737625685788*^9}, {3.932737681759392*^9, 3.9327376847677927`*^9}, {
   3.9327451334476337`*^9, 3.932745212577858*^9}, {3.932745256114959*^9, 
   3.9327454573059797`*^9}, 3.9327455658398037`*^9, {3.932745605724455*^9, 
   3.932745608693737*^9}, {3.932748119503325*^9, 3.9327481236268473`*^9}, {
   3.93274933850006*^9, 3.932749338990005*^9}, {3.932750881757578*^9, 
   3.9327508889858723`*^9}, {3.932815391001519*^9, 3.932815524587686*^9}, {
   3.9328157815864563`*^9, 3.9328157817047033`*^9}, {3.9345365375996237`*^9, 
   3.934536538045547*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f720e184-b12c-439c-af6a-7b96f36f2c54"],

Cell[TextData[{
 Cell[BoxData[
 "IsLoxodromic"], "InlineCode",ExpressionUUID->
  "2b163374-1e92-4174-a073-744a8fdac9a2"],
 ", then, is got by looping over all elements in \[CapitalGamma], and testing \
",
 Cell[BoxData[
 "IsLoxodromicSubtest"], "InlineCode",ExpressionUUID->
  "688bf012-2a4d-41a9-9658-04996e598a40"],
 " on each:"
}], "Text",
 CellChangeTimes->{{3.934536552492853*^9, 
  3.934536570574582*^9}},ExpressionUUID->"37c6a4c0-c873-4869-9c1d-\
4f0536211791"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsLoxodromic", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", " ", "=", " ", "\"\<IDK\>\""}], "}"}], ",", " ", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IsLoxodromicSubtest", "[", 
           RowBox[{"\[CapitalGamma]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", "==", " ", 
          "\"\<LOXODROMIC\>\""}], ",", " ", 
         RowBox[{"output", " ", "=", " ", "\"\<LOXODROMIC\>\""}]}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "\[CapitalGamma]", "]"}]}], "}"}]}], "]"}], 
     ";", "\n", "\t", "output"}]}], "]"}]}]], "Code",
 CellChangeTimes->{3.9345365414506073`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"e724fc7c-975c-40fd-a293-cfa556c6e668"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Section",
 CellChangeTimes->{{3.9327450455227137`*^9, 3.932745047322833*^9}, {
  3.9328245400629473`*^9, 3.932824540627845*^9}, {3.932825468169367*^9, 
  3.932825470328286*^9}, {3.934481713064211*^9, 
  3.9344817140817738`*^9}},ExpressionUUID->"4b01b828-a57a-45a3-bfca-\
0b26c80b5931"],

Cell[TextData[{
 "In this section, we provide the code necessary to verify all of our gadgets \
and their actions that appear in the applications section of our paper, as \
well as Appendix B. Note, since many symbols like \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "C"], "InlineCode",ExpressionUUID->"d7bc5180-4edb-4852-a965-0623a6641383"],
 "\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "E"], "InlineCode",ExpressionUUID->"2f9cb174-216b-4520-96db-0af0802bf815"],
 "\[CloseCurlyDoubleQuote] are protected by Mathematica, we have relabeled \
all gadgets in this notebook (save those that appear in Appendix B). In \
particular, if \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "a"], "InlineCode",ExpressionUUID->"00218c65-d9b8-46b9-ae7c-c2fde1fcf559"],
 "\[CloseCurlyDoubleQuote] labels a gadget in the main body of our paper, \
then it is labeled by \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "aa"], "InlineCode",ExpressionUUID->"def0f8df-7c1c-4af8-b795-be61e14cb4e9"],
 "\[CloseCurlyDoubleQuote] in this notebook. Similarly, the action ",
 Cell[BoxData[
 "A"], "InlineCode",ExpressionUUID->"15727c4e-6b5f-45dd-bfc7-7d4dfd96ed06"],
 " of ",
 Cell[BoxData[
 "a"], "InlineCode",ExpressionUUID->"bb10eb03-42a2-4ed4-947a-747adf280c1e"],
 " is labeled by \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
 "AA"], "InlineCode",ExpressionUUID->"4dff9833-e6c7-4615-9913-bf2bec90aa6f"],
 "\[CloseCurlyDoubleQuote] in this notebook, and so forth. Inverses are \
labeled with an ",
 Cell[BoxData[
 "Inv"], "InlineCode",ExpressionUUID->
  "6fce9674-df24-4ec2-a73c-7867a5b7765e"],
 " at the end of the variable name.\n\nTo properly use this code, one must \
first evaluate the cells below containing the ",
 Cell[BoxData[
 "H"], "InlineCode",ExpressionUUID->"eb792686-d0ec-4a4a-8247-cd2fe779e594"],
 ", ",
 Cell[BoxData[
 "T"], "InlineCode",ExpressionUUID->"f08cfce0-9dc6-459e-9455-19aee9f8b915"],
 ", etc. matrices in the computational basis, and then proceed to evaluate \
the cells sequentially in each section. Again, this is because we redefine \
variables as we go (namely, the variable ",
 Cell[BoxData[
 "U"], "InlineCode",ExpressionUUID->"ad836d63-5248-40bc-9a12-0cb318594205"],
 ", which is a conjugating unitary)."
}], "Text",
 CellChangeTimes->{{3.934536818564786*^9, 3.9345368282461157`*^9}, {
  3.934536938559799*^9, 3.934537043925293*^9}, {3.9345407851276407`*^9, 
  3.934540871655424*^9}, {3.9345411324911413`*^9, 
  3.9345411335832243`*^9}},ExpressionUUID->"f0ca53b2-1773-4cf0-a727-\
3af0093c1e70"],

Cell[BoxData[{
 RowBox[{"H", " ", ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}], "*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], "\n", 
 RowBox[{"T", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{"Pi", "/", "4"}]}], ")"}]}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"S", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "I"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"X", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"Y", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"-", "I"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"Z", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"CZ", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"SWAP", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"T4", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "1"}], "}"}]}], "}"}]}]}], "Code",
 CellChangeTimes->{{3.932824559384006*^9, 3.932824568580514*^9}, {
   3.9328246293718*^9, 3.932824649128787*^9}, {3.93282555718305*^9, 
   3.932825572316842*^9}, {3.932833110781035*^9, 3.932833148853333*^9}, {
   3.932833231324027*^9, 3.93283340303618*^9}, {3.932833452093935*^9, 
   3.9328334593616047`*^9}, {3.932833605583498*^9, 3.932833645331345*^9}, {
   3.932851425416807*^9, 3.932851430225173*^9}, {3.9328519572563753`*^9, 
   3.932852005385645*^9}, {3.9328522811763353`*^9, 3.932852286109069*^9}, {
   3.932920599963521*^9, 3.932920620267413*^9}, {3.93292695245016*^9, 
   3.932926957091687*^9}, {3.933070620506092*^9, 3.9330706232294483`*^9}, {
   3.933073156388743*^9, 3.9330731569198723`*^9}, {3.933953477483788*^9, 
   3.933953624141747*^9}, 3.933953820070189*^9, {3.9341382585603867`*^9, 
   3.934138264411263*^9}, {3.9345368922040243`*^9, 3.934536895458609*^9}, 
   3.934538401686758*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"bdbe2597-f024-4eb8-99b0-5b5b56fab3d9"],

Cell[CellGroupData[{

Cell["IQP Circuits", "Subsection",
 CellChangeTimes->{{3.932824577042487*^9, 3.932824577288946*^9}, {
  3.9328253229782476`*^9, 
  3.932825323907666*^9}},ExpressionUUID->"d6f88208-82db-4a99-be33-\
73b3f2837cf6"],

Cell["Gadgets and their inverses:", "Text",
 CellChangeTimes->{{3.932824663957003*^9, 3.932824684829358*^9}, {
  3.9345378698467712`*^9, 
  3.9345378714996147`*^9}},ExpressionUUID->"10e46241-5cd0-4a2b-8f97-\
9e6e2161fb13"],

Cell[BoxData[{
 RowBox[{"aa", " ", ":=", " ", 
  RowBox[{"H", ".", "T", ".", "H"}]}], "\n", 
 RowBox[{"bb", " ", ":=", " ", 
  RowBox[{"SWAP", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"T", ",", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "4"}], "]"}]}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"cc", " ", ":=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H", ",", "H"}], "]"}], ".", "CZ", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "T"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H", ",", "H"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{"aaInv", " ", ":=", " ", 
  RowBox[{"H", ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"T", ",", "7"}], "]"}], ".", "H"}]}], "\n", 
 RowBox[{"bbInv", " ", ":=", " ", 
  RowBox[{"SWAP", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "4"}], "]"}], ",", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "7"}], "]"}]}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}]}]}], "\n", 
 RowBox[{"ccInv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "4"}], "]"}], ",", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "3"}], "]"}]}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.93292631776053*^9, 3.9329264465696373`*^9}, {
   3.932926540385228*^9, 3.932926770593164*^9}, {3.932926816191002*^9, 
   3.9329269671009912`*^9}, {3.932927206248434*^9, 3.9329272094233217`*^9}, {
   3.9329284045063334`*^9, 3.932928450042399*^9}, {3.9329284884684553`*^9, 
   3.932928517494108*^9}, {3.93292855612114*^9, 3.932928645185014*^9}, {
   3.932928706316278*^9, 3.9329287078142433`*^9}, {3.932928978430519*^9, 
   3.932929260117872*^9}, {3.932930645695505*^9, 3.932930671554666*^9}, {
   3.932930798740025*^9, 3.9329308321538553`*^9}, {3.93293098522003*^9, 
   3.932931023159852*^9}, {3.932932164992413*^9, 3.932932165136753*^9}, {
   3.932934463989235*^9, 3.932934467287758*^9}, {3.933072096517251*^9, 
   3.933072126055448*^9}, {3.933072725341464*^9, 3.9330727622753468`*^9}, {
   3.933072809612234*^9, 3.933072813461515*^9}, {3.933072855510145*^9, 
   3.9330729423949757`*^9}, {3.933073203957015*^9, 3.933073244817514*^9}, {
   3.9330733575307837`*^9, 3.933073371437302*^9}, {3.933077260106229*^9, 
   3.933077262309443*^9}, 3.933077292986225*^9, {3.9330804300590897`*^9, 
   3.933080432068186*^9}, {3.933080563935978*^9, 3.933080574999927*^9}, 
   3.933091512114339*^9, {3.9344545564850597`*^9, 3.934454569344453*^9}, {
   3.934537857869944*^9, 3.934537865452673*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7870d3f4-9f80-450b-96cd-221c8ada3e7a"],

Cell["Normalized gadget actions:", "Text",
 CellChangeTimes->{{3.932824688334901*^9, 
  3.932824696274117*^9}},ExpressionUUID->"7e081185-c926-43de-aa1f-\
795fa506b873"],

Cell[BoxData[{
 RowBox[{"AA", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"aa", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}], "\n", 
 RowBox[{"BB", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"bb", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CC", " ", ":=", " ", 
   RowBox[{"NormalizedGadgetAction", "[", 
    RowBox[{"cc", ",", " ", 
     RowBox[{"{", "0", "}"}], ",", " ", 
     RowBox[{"{", "0", "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"AAInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"aaInv", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}], "\n", 
 RowBox[{"BBInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"bbInv", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"CCInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"ccInv", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.932824677929266*^9, 3.932824680155912*^9}, {
   3.932828558718211*^9, 3.932828569472468*^9}, {3.932828870773079*^9, 
   3.932828874752569*^9}, 3.9328946025820704`*^9, 3.932928709011301*^9, 
   3.932929255100163*^9, {3.9329310076092987`*^9, 3.932931044363168*^9}, {
   3.932932012207191*^9, 3.93293206661413*^9}, {3.9329322564038143`*^9, 
   3.932932273627891*^9}, {3.932932386722129*^9, 3.932932386918057*^9}, {
   3.93293249116549*^9, 3.932932491282947*^9}, {3.932932524005493*^9, 
   3.932932612883428*^9}, {3.932934472929721*^9, 3.93293447332257*^9}, {
   3.9330720920840273`*^9, 3.933072093444854*^9}, {3.933072132471506*^9, 
   3.933072180449945*^9}, {3.933072279813632*^9, 3.933072302144747*^9}, {
   3.933072781776843*^9, 3.933072785096397*^9}, {3.9330729145124073`*^9, 
   3.933072919958983*^9}, {3.933073170905504*^9, 3.9330731718662786`*^9}, {
   3.933073252661358*^9, 3.933073284497923*^9}, {3.9330734673097153`*^9, 
   3.93307351901893*^9}, {3.933077264808103*^9, 3.933077271856245*^9}, {
   3.933080408329669*^9, 3.933080459430732*^9}, {3.9330804980934057`*^9, 
   3.9330805214519463`*^9}, {3.933080552752183*^9, 3.93308057958784*^9}, {
   3.934454577788268*^9, 3.934454592063673*^9}, {3.9345378745451403`*^9, 
   3.934537879655591*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3e360a9f-b2b9-4d25-80d8-6ba39dd91618"],

Cell["Verify inverses:", "Text",
 CellChangeTimes->{{3.932824714246059*^9, 
  3.9328247194790382`*^9}},ExpressionUUID->"8c5dac80-d188-413c-acdc-\
c38066acd02c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AA", ".", "AAInv"}], " ", "==", " ", 
  RowBox[{"AAInv", ".", "AA"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"BB", ".", "BBInv"}], " ", "==", " ", 
  RowBox[{"BBInv", ".", "BB"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", 
   RowBox[{"CC", ".", "CCInv"}]}], " ", "==", " ", 
  RowBox[{"-", 
   RowBox[{"CCInv", ".", "CC"}]}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "Code",
 CellChangeTimes->{{3.93282478018108*^9, 3.932824833809969*^9}, {
   3.93285140021916*^9, 3.932851411499465*^9}, 3.932894600860767*^9, {
   3.9329287140407047`*^9, 3.9329287536709843`*^9}, {3.932931049046677*^9, 
   3.93293105466712*^9}, {3.933072182633239*^9, 3.9330721835508738`*^9}, {
   3.933072966318927*^9, 3.933072975502726*^9}, {3.933077297516913*^9, 
   3.933077301444828*^9}, {3.93308058267638*^9, 3.93308063691792*^9}, {
   3.933080669780896*^9, 3.933080675343507*^9}, {3.933091505033279*^9, 
   3.933091523367136*^9}, {3.933093313168398*^9, 3.933093314100606*^9}, {
   3.934454616351597*^9, 3.934454628587788*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"31662451-c00f-46de-b2c4-a9c23d29090e"],

Cell["Classical intractability test:", "Text",
 CellChangeTimes->{{3.932824747448358*^9, 
  3.932824755148343*^9}},ExpressionUUID->"4dcc280a-4493-442f-ac53-\
f43a203735fc"],

Cell[BoxData[{
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "IQP"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {IQP}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
   "AA", ",", "BB", ",", "CC", ",", "AAInv", ",", "BBInv", ",", "CCInv"}], 
   "}"}]}], "\n", 
 RowBox[{"IsElementary", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "IQP"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {IQP}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsDiscrete", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "IQP"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {IQP}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsLoxodromic", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "IQP"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {IQP}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}]}], "Code",
 CellChangeTimes->{{3.932745712235372*^9, 3.9327457497818613`*^9}, {
   3.9327462822027607`*^9, 3.9327463119571238`*^9}, {3.9327476358161793`*^9, 
   3.9327476372215776`*^9}, 3.932748634223401*^9, {3.9327487702586527`*^9, 
   3.932748770998773*^9}, {3.932748907974711*^9, 3.932748919818076*^9}, {
   3.932769146364416*^9, 3.932769176906541*^9}, 3.932815740831811*^9, 
   3.93281632159022*^9, {3.932823684034421*^9, 3.9328237191383743`*^9}, {
   3.9328238658094797`*^9, 3.9328238663359756`*^9}, {3.932824736623925*^9, 
   3.9328247374594793`*^9}, {3.9328248550093946`*^9, 3.932824857791955*^9}, {
   3.93289380234661*^9, 3.932893806151373*^9}, 3.932928691457883*^9, {
   3.932928782857008*^9, 3.932928794175208*^9}, {3.932928900068389*^9, 
   3.932928901745349*^9}, {3.932931094490535*^9, 3.932931096595001*^9}, 
   3.9330724247051992`*^9, 3.9330773057307034`*^9, {3.9330806895650187`*^9, 
   3.933080694416667*^9}, {3.933087639856546*^9, 3.933087640361669*^9}, {
   3.933341484936051*^9, 3.933341536483944*^9}, {3.9344546333092318`*^9, 
   3.934454640417013*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"172d652f-d3b3-40fe-be9c-1d9847d1e6f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["CCCs", "Subsection",
 CellChangeTimes->{{3.932769512419496*^9, 3.932769515111902*^9}, {
  3.932769566111308*^9, 3.932769567394786*^9}, {3.932824585736167*^9, 
  3.932824591485538*^9}, {3.932825316348158*^9, 
  3.932825325478444*^9}},ExpressionUUID->"1cde8eda-3db5-4737-ae8b-\
8ae2214222ee"],

Cell[TextData[{
 "Choose single-qubit ",
 Cell[BoxData[
 "U"], "InlineCode",ExpressionUUID->"00369364-7496-48c4-b917-5aa4e815f138"],
 " as a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"2", "\[Pi]", "/", "3"}], TraditionalForm], "errors" -> {}, 
     "input" -> "2\\pi/3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "18063ed5-5bc0-4580-aad7-00a068947993"],
 " rotation about x-axis:"
}], "Text",
 CellChangeTimes->{{3.93282496254878*^9, 3.932824968585569*^9}, {
  3.932825060763214*^9, 3.9328251112287827`*^9}, {3.934540979258814*^9, 
  3.9345409894615927`*^9}},ExpressionUUID->"1301582b-3482-4057-8098-\
be80d6dffc85"],

Cell[BoxData[{
 RowBox[{"U", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}], ",", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"UInv", " ", ":=", " ", 
  RowBox[{"Inverse", "[", "U", "]"}]}]}], "Code",
 CellChangeTimes->{{3.932769532493616*^9, 3.932769574566614*^9}, {
   3.9327696465977573`*^9, 3.9327698603077393`*^9}, {3.932769981678829*^9, 
   3.932770063972484*^9}, {3.932770122109538*^9, 3.9327705194706573`*^9}, {
   3.9327705772275*^9, 3.932770645693967*^9}, {3.9327707050565443`*^9, 
   3.9327707558285713`*^9}, {3.932770792962085*^9, 3.932770837655649*^9}, {
   3.932770877022643*^9, 3.932770877430132*^9}, {3.932820504056712*^9, 
   3.932820510167787*^9}, {3.932820543003501*^9, 3.9328206978761578`*^9}, {
   3.932820791406518*^9, 3.932820846636531*^9}, {3.9328208785043907`*^9, 
   3.932820922880582*^9}, {3.93282096829943*^9, 3.932821051051524*^9}, {
   3.932821082510849*^9, 3.932821153004306*^9}, {3.9328212060753193`*^9, 
   3.932821228933462*^9}, {3.9328212963402777`*^9, 3.932821302966866*^9}, {
   3.9328213470806093`*^9, 3.932821499494722*^9}, {3.932821543894887*^9, 
   3.932821547405881*^9}, {3.932821593816429*^9, 3.9328216472934*^9}, {
   3.9328219674167013`*^9, 3.932821970613759*^9}, {3.932823314612974*^9, 
   3.93282339856925*^9}, {3.9328234517997227`*^9, 3.932823472765975*^9}, 
   3.932823512139501*^9, {3.932823733953532*^9, 3.932823746765564*^9}, {
   3.932823871356607*^9, 3.932823902588359*^9}, {3.9328240399341583`*^9, 
   3.932824081699044*^9}, {3.93282451226261*^9, 3.9328245239723454`*^9}, {
   3.932824625608663*^9, 3.932824626179714*^9}, {3.9328249559352503`*^9, 
   3.932824990579813*^9}, {3.9328250523965187`*^9, 3.932825059172637*^9}, 
   3.93282511752915*^9, {3.932825311587408*^9, 3.932825311836622*^9}, {
   3.932920417128767*^9, 3.932920426787673*^9}, {3.9330706281254873`*^9, 
   3.933070646886849*^9}, {3.933070686463059*^9, 3.9330706868731833`*^9}, {
   3.9330740398174887`*^9, 3.93307404403446*^9}, {3.9330773142608223`*^9, 
   3.933077337990881*^9}, {3.9340468345373507`*^9, 3.934047040092512*^9}, 
   3.934047464303233*^9, {3.934047807776515*^9, 3.934047816730616*^9}, {
   3.934048478606114*^9, 3.934048492401517*^9}, {3.934048620484638*^9, 
   3.934048620547826*^9}, {3.934048882769596*^9, 3.9340488984994183`*^9}, {
   3.934049078578721*^9, 3.9340490788822927`*^9}, {3.9340491525308*^9, 
   3.934049154447049*^9}, {3.9340492847738543`*^9, 3.9340492921431093`*^9}, {
   3.934049330334154*^9, 3.9340493334946632`*^9}, {3.934454667424654*^9, 
   3.9344546680741167`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"6dc77277-9147-48f7-ab84-38f6a6bd93e9"],

Cell["Gadgets and their inverses:", "Text",
 CellChangeTimes->{{3.93282512972561*^9, 3.932825131576124*^9}, {
  3.93453789724345*^9, 
  3.934537898807621*^9}},ExpressionUUID->"8c4483f8-193d-453e-85df-\
09d59e9d5373"],

Cell[BoxData[{
 RowBox[{"dd", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ee", " ", ":=", " ", 
   RowBox[{"SWAP", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", "S"}], "]"}], ".", 
    
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"U", ",", "U"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{"ddInv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"S", ",", "2"}], "]"}], ",", " ", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"eeInv", " ", ":=", " ", 
  RowBox[{"SWAP", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"S", ",", " ", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"S", ",", "2"}], "]"}]}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}]}], "Code",
 CellChangeTimes->{
  3.932769902734913*^9, {3.932770069165777*^9, 3.932770087361442*^9}, {
   3.932770663401305*^9, 3.932770670469154*^9}, 3.9328156208400507`*^9, 
   3.932820528265606*^9, {3.93282460977322*^9, 3.932824613549445*^9}, {
   3.932825123791594*^9, 3.9328251455167627`*^9}, {3.9328252201598787`*^9, 
   3.932825221654983*^9}, {3.932825536279214*^9, 3.932825538569148*^9}, {
   3.9328256159232473`*^9, 3.932825642582287*^9}, {3.932825730775322*^9, 
   3.93282575229631*^9}, {3.932827773094429*^9, 3.932827810201271*^9}, {
   3.93282868100016*^9, 3.932828701032207*^9}, {3.932856510705365*^9, 
   3.932856514212385*^9}, {3.932931115982011*^9, 3.932931126377048*^9}, {
   3.9329349051065607`*^9, 3.932934909208004*^9}, {3.93293494647173*^9, 
   3.9329349466274033`*^9}, {3.933072327942099*^9, 3.933072343942709*^9}, {
   3.933077319902446*^9, 3.9330773200809183`*^9}, {3.934454671104753*^9, 
   3.9344546727557983`*^9}, {3.93453789283324*^9, 3.934537894928627*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d621d088-0cef-44d0-a3c4-8fa56b11c579"],

Cell["Normalized gadget actions:", "Text",
 CellChangeTimes->{{3.9328251596526737`*^9, 
  3.9328251705767813`*^9}},ExpressionUUID->"fe6e1559-9c75-4047-9641-\
802d81178ac5"],

Cell[BoxData[{
 RowBox[{"DD", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"dd", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"EE", " ", ":=", " ", 
   RowBox[{"NormalizedGadgetAction", "[", 
    RowBox[{"ee", ",", " ", 
     RowBox[{"{", "0", "}"}], ",", " ", 
     RowBox[{"{", "0", "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"DDInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"ddInv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{"EEInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"eeInv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwdz28o43EcB/DxgNFtHqDz7zg6JX8652xNpOPY5M9tpoz9xKZb/jwwIf1C
c4Yh/6Yu6k5y5YHusAfXrXS3M0fS5BrnFrWjFUVYiJo/D+77/j749OpT7/en
PtHVWrnGm8PhxJKBzTcrtpyi8yzR+6UN+KPnzA4jq0xbkF3UOuDdgXQXmrl5
LiipOaU2uL5dw0bhwQ20Kut9colDpQY+dETJgmDybBX1QzmTKSYeZrzJgY/y
ihWwSTxUAaVF31XweaVIDbk1Hg1ce+2upXmntQv+1nn00JTCjEFnsnkcduQH
TMLEeA1VFj84Df++6JyBx32rVnilTFuB90y3g/aFZ/9g6dTXI3ih1Z/Q/V2g
rwT5GB0XciRxj6kP3iEw9MvnJ7DfJoyEc/r8Z9CYxsZC8zL7EnrdHaXCsLrL
kWJiC/+eKtj2+MuJ14MWHgxQz6+XEHd421SDsjChmZj+UZsEFb6KFChc7kiH
jtHLV/BpuCAbTkRE9LH4l33bD/8c/xqGbj/jCJwytJa34b6ggIG9lT3tFuL+
7E4X/LS3J/1J1Ll5Miiyl50sEcW3KmqYk2lSyc6zXO5N6gJ/MXiA6GPcp/4H
9Ocbsw==
  "],
 CellLabel->"In[60]:=",ExpressionUUID->"6561cd68-4937-4a2a-96cb-5b148c8b7d64"],

Cell["Verify inverses:", "Text",
 CellChangeTimes->{{3.932825187413159*^9, 
  3.9328251903901663`*^9}},ExpressionUUID->"5c16751e-095a-46aa-988c-\
212d6afb9cd6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DD", ".", "DDInv"}], " ", "==", " ", 
  RowBox[{"DDInv", ".", "DD"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"EE", ".", "EEInv"}], " ", "==", " ", 
  RowBox[{"EEInv", ".", "EE"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "Code",
 CellChangeTimes->{{3.93282566951744*^9, 3.932825680445611*^9}, {
  3.9328257179233913`*^9, 3.9328257243602123`*^9}, {3.932851330076168*^9, 
  3.932851391856884*^9}, {3.932931140948736*^9, 3.932931151075089*^9}, {
  3.933019580471817*^9, 3.933019608252821*^9}, {3.933019974597149*^9, 
  3.933019974928924*^9}, {3.93302004721021*^9, 3.933020054257723*^9}, {
  3.93307237978903*^9, 3.9330723861124496`*^9}, {3.933077325111911*^9, 
  3.93307732640458*^9}, {3.934134969390458*^9, 3.9341349699737597`*^9}, {
  3.934454684232531*^9, 3.9344546897253437`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d0e40961-5fad-4546-9c94-3a4cc26d9c93"],

Cell["Classical intractability test:", "Text",
 CellChangeTimes->{{3.932825204267955*^9, 
  3.932825207801568*^9}},ExpressionUUID->"f012ec8a-7283-4072-8167-\
f9b9efef6187"],

Cell[BoxData[{
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "CCC"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {CCC}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"DD", ",", " ", "EE", ",", " ", "DDInv", ",", " ", "EEInv"}], 
   "}"}]}], "\n", 
 RowBox[{"IsElementary", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "CCC"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {CCC}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsDiscrete", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "CCC"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {CCC}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsLoxodromic", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "CCC"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {CCC}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}]}], "Code",
 CellChangeTimes->{{3.9328252117312307`*^9, 3.93282523256446*^9}, {
   3.9328258265055857`*^9, 3.932825828885929*^9}, {3.932931161985958*^9, 
   3.932931166206457*^9}, 3.933072416292109*^9, 3.933074079214629*^9, {
   3.9330876486863947`*^9, 3.933087649139351*^9}, {3.934454693280579*^9, 
   3.934454694205372*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"e880fb71-be5f-4487-a91c-8d66feff0e7a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Commuting CCCs", "Subsection",
 CellChangeTimes->{{3.932825852351015*^9, 
  3.932825854386614*^9}},ExpressionUUID->"613eda07-6764-4a5b-837d-\
0213ab345599"],

Cell[TextData[{
 "The classical intractability of ",
 StyleBox["commuting",
  FontSlant->"Italic"],
 " CCCs follows from the CCC section, because the gadgets there (namely: ",
 Cell[BoxData[
 "dd"], "InlineCode",ExpressionUUID->"62231a54-9805-42c6-9bb2-77eb3b932a59"],
 ", ",
 Cell[BoxData[
 "ee"], "InlineCode",ExpressionUUID->"eea05b19-7bae-4c82-9356-ef058411cc8e"],
 ", ",
 Cell[BoxData[
 "ddInv"], "InlineCode",ExpressionUUID->
  "86f53943-c1e8-426f-9255-451fda7b9b9d"],
 ", and ",
 Cell[BoxData[
 "eeInv"], "InlineCode",ExpressionUUID->
  "fe8a1401-c8ed-4680-949e-238c0dc8c7c6"],
 ") are all realized over the commuting CCC gate set."
}], "Text",
 CellChangeTimes->{{3.9328258634885607`*^9, 3.9328259073020487`*^9}, {
  3.932825954120595*^9, 3.932825971458909*^9}, {3.9329448894781303`*^9, 
  3.9329448975431957`*^9}, {3.934478652365941*^9, 3.9344786533630123`*^9}, {
  3.934540946209651*^9, 
  3.934540968577249*^9}},ExpressionUUID->"b814ce63-19f2-4091-8d75-\
d09aefe4866a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Conjugated ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["T",
     FontSlant->"Plain"], "4"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6ffae163-27f2-4426-b2a7-69d3e9da4679"],
 " +  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["P", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\mathcal{P}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2863e3d5-e505-4d03-b2a9-79ad41a76d34"],
 " Circuits"
}], "Subsection",
 CellChangeTimes->{{3.932833090814003*^9, 3.932833102275154*^9}, {
  3.932833729726856*^9, 3.93283373044833*^9}, {3.934478664782741*^9, 
  3.934478737968429*^9}},ExpressionUUID->"2562e1b2-183b-4242-b727-\
9c9de68c6829"],

Cell[TextData[{
 "Choose single-qubit ",
 Cell[BoxData[
 "U"], "InlineCode",ExpressionUUID->"458a795c-273c-4d53-8e89-f8b9dbacda7c"],
 " as ",
 Cell[BoxData[
 "T"], "InlineCode",ExpressionUUID->"962e7ff8-fb73-40c4-92ad-5ddf64f6829b"],
 " times a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"2", "\[Pi]", "/", "3"}], TraditionalForm], "errors" -> {}, 
     "input" -> "2\\pi / 3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1d4c053d-49bb-4611-9b29-c748667477dd"],
 " rotation about x-axis:"
}], "Text",
 CellChangeTimes->{{3.9328531649149637`*^9, 3.9328531755541162`*^9}, {
  3.933087482917239*^9, 3.933087486605102*^9}, {3.934540896175498*^9, 
  3.934540935275744*^9}},ExpressionUUID->"e379f1c1-0634-4be9-882d-\
7d76f7443a24"],

Cell[BoxData[{
 RowBox[{"U", " ", ":=", " ", 
  RowBox[{"T", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}]}]}], "\n", 
 RowBox[{"UInv", " ", ":=", " ", 
  RowBox[{"Inverse", "[", "U", "]"}]}]}], "Code",
 CellChangeTimes->{{3.932833656313697*^9, 3.932833659213118*^9}, 
   3.932833733821199*^9, {3.932851311480019*^9, 3.932851315190905*^9}, {
   3.9328514479288797`*^9, 3.9328514480905657`*^9}, {3.932851762993741*^9, 
   3.93285177830224*^9}, {3.932851809952505*^9, 3.9328519279634113`*^9}, {
   3.932852399043029*^9, 3.932852399528466*^9}, {3.932945079001906*^9, 
   3.932945083918496*^9}, {3.932945129273347*^9, 3.932945149313233*^9}, {
   3.932945578113861*^9, 3.932945602677169*^9}, {3.93294563492871*^9, 
   3.9329456406730957`*^9}, {3.932945841257893*^9, 3.932945845993002*^9}, {
   3.9330009394141617`*^9, 3.933000943222952*^9}, {3.933001122650333*^9, 
   3.93300120924467*^9}, {3.933001322927993*^9, 3.933001403398055*^9}, {
   3.933001541156571*^9, 3.933001546738595*^9}, {3.933009407105558*^9, 
   3.9330094075816793`*^9}, {3.9330094585757*^9, 3.933009460504331*^9}, {
   3.933009542865325*^9, 3.933009559212213*^9}, {3.933009669648633*^9, 
   3.93300967476263*^9}, {3.9330104421614857`*^9, 3.9330105146816397`*^9}, 
   3.933010617009925*^9, {3.9330113341248493`*^9, 3.933011334757873*^9}, {
   3.933011854853477*^9, 3.933011883191525*^9}, {3.933012385337324*^9, 
   3.933012436797452*^9}, {3.9330132582892447`*^9, 3.9330132803248367`*^9}, {
   3.93301331202604*^9, 3.933013325215885*^9}, {3.933013802320804*^9, 
   3.933013825049*^9}, {3.933077446052409*^9, 3.93307747803834*^9}, {
   3.933077520505568*^9, 3.93307752231595*^9}, {3.933077563323268*^9, 
   3.9330775815998487`*^9}, {3.9330776359972963`*^9, 3.93307763903045*^9}, {
   3.933077687862974*^9, 3.9330777229562607`*^9}, {3.933077905528262*^9, 
   3.933078036517106*^9}, 3.933078150774682*^9, {3.9330791486960077`*^9, 
   3.933079302143407*^9}, {3.933079507738838*^9, 3.933079536357935*^9}, {
   3.933079571991887*^9, 3.933079633239765*^9}, {3.9330796655704203`*^9, 
   3.933079769476428*^9}, {3.933079850431664*^9, 3.933080060291692*^9}, {
   3.933081392118642*^9, 3.9330814866057587`*^9}, {3.933081756355443*^9, 
   3.9330817653123817`*^9}, {3.9330818024488087`*^9, 3.933081803259058*^9}, {
   3.933083041374673*^9, 3.933083041946526*^9}, {3.933094151949395*^9, 
   3.933094166089224*^9}, {3.933094339209786*^9, 3.933094340882369*^9}, {
   3.9330946765312443`*^9, 3.933094684022921*^9}, {3.934134989882451*^9, 
   3.934134998287868*^9}, {3.934537150822348*^9, 3.934537157371019*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"440f4be8-f13d-4b6c-ae32-b556f0e83a3b"],

Cell["Gadgets and their inverses:", "Text",
 CellChangeTimes->{{3.9328532416703653`*^9, 3.932853270451717*^9}, 
   3.932853324492154*^9, {3.934537924719077*^9, 
   3.934537926307364*^9}},ExpressionUUID->"c1df19c2-f0a8-4ac3-8c2c-\
5c154845ab65"],

Cell[BoxData[{
 RowBox[{"ff", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
    "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", " ", "Y", ",", " ", "Y", ",", " ", "X"}], "]"}], ".", 
   "T4", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "SWAP", ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"SWAP", ",", " ", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{"gg", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
    "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "X", ",", "Z", ",", "X"}], "]"}], ".", "T4", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"hh", " ", ":=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
     "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Y", ",", "X", ",", "Y", ",", "X"}], "]"}], ".", "T4", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{"ffInv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"SWAP", ",", " ", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
    "]"}], ".", "T4", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", " ", "Y", ",", " ", "Y", ",", " ", "X"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], 
    "]"}]}]}], "\n", 
 RowBox[{"ggInv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
    "]"}], ".", "T4", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"X", ",", "Z", ",", "X", ",", "Z"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], 
    "]"}]}]}], "\n", 
 RowBox[{"hhInv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", " ", "UInv", ",", " ", "UInv", ",", " ", "UInv"}], 
    "]"}], ".", "T4", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Y", ",", "X", ",", "X", ",", "Y"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", " ", "U", ",", " ", "U", ",", " ", "U"}], 
    "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.932851462429371*^9, 3.932851649509008*^9}, {
   3.9328516847023153`*^9, 3.932851752685377*^9}, {3.932851801573683*^9, 
   3.9328518054497557`*^9}, {3.932851869001719*^9, 3.9328518750739117`*^9}, {
   3.932851934586493*^9, 3.932851944629027*^9}, {3.932852357452035*^9, 
   3.932852852291502*^9}, {3.932852904777904*^9, 3.932852955496354*^9}, {
   3.9328529886242447`*^9, 3.932853108554318*^9}, {3.932853143850651*^9, 
   3.932853144093603*^9}, {3.932853273803187*^9, 3.932853284139502*^9}, {
   3.93285341657548*^9, 3.932853495468779*^9}, {3.932853576164028*^9, 
   3.932853576911755*^9}, {3.932853608625938*^9, 3.932853735867028*^9}, {
   3.932853810726749*^9, 3.932854063788163*^9}, {3.932854205211833*^9, 
   3.932854328047641*^9}, {3.932855906936241*^9, 3.932855910273738*^9}, {
   3.932858706121181*^9, 3.932858706303787*^9}, {3.9328587923749933`*^9, 
   3.9328588683563423`*^9}, {3.9328589335623007`*^9, 
   3.9328592558490458`*^9}, {3.9328592893723717`*^9, 3.932859368233917*^9}, {
   3.9328594318893833`*^9, 3.932859590532073*^9}, {3.9328596468623466`*^9, 
   3.93285988704323*^9}, {3.932945017666164*^9, 3.932945058088887*^9}, {
   3.932945172525545*^9, 3.932945322341749*^9}, {3.932945359896183*^9, 
   3.932945556760988*^9}, {3.9329458946801453`*^9, 3.932945908284256*^9}, {
   3.9330009452926617`*^9, 3.933000991050465*^9}, {3.933001219499529*^9, 
   3.9330012997513227`*^9}, {3.9330014187136583`*^9, 3.933001493252845*^9}, {
   3.933009383758316*^9, 3.933009392894443*^9}, {3.9330095728414183`*^9, 
   3.933009643335026*^9}, {3.933009689327875*^9, 3.93300969062986*^9}, {
   3.933009738790769*^9, 3.933009753589589*^9}, {3.933009847892271*^9, 
   3.933009873117324*^9}, {3.933010130950366*^9, 3.933010134715877*^9}, {
   3.9330101677639723`*^9, 3.933010172894435*^9}, {3.93301020404391*^9, 
   3.9330102297964773`*^9}, {3.933010819516446*^9, 3.933010923728179*^9}, {
   3.9330109579640923`*^9, 3.933011326712521*^9}, {3.933011357190875*^9, 
   3.93301173793511*^9}, {3.933011929245789*^9, 3.933011934883334*^9}, {
   3.933012144388522*^9, 3.933012168302939*^9}, {3.9330122040539017`*^9, 
   3.933012335992881*^9}, {3.933012446875833*^9, 3.933012536835449*^9}, {
   3.933012610576008*^9, 3.933012719099347*^9}, {3.933012750039982*^9, 
   3.933012813454664*^9}, {3.933012850513897*^9, 3.933013243838668*^9}, {
   3.93301330093712*^9, 3.933013308116724*^9}, 3.9330134141517878`*^9, 
   3.9330134621383*^9, {3.933013650127898*^9, 3.933013650519998*^9}, {
   3.933013703486075*^9, 3.933013733974864*^9}, {3.933013768815179*^9, 
   3.9330137956411943`*^9}, {3.933013855402225*^9, 3.933013887717882*^9}, {
   3.933014009771246*^9, 3.933014034834207*^9}, {3.9330140677229643`*^9, 
   3.933014073315192*^9}, {3.9330141997030163`*^9, 3.933014202976309*^9}, {
   3.933015037393948*^9, 3.933015179238055*^9}, {3.933020393267218*^9, 
   3.933020393541923*^9}, {3.933020433695035*^9, 3.933020461016683*^9}, {
   3.933020697597938*^9, 3.933020705884424*^9}, {3.9330207589840937`*^9, 
   3.9330207765896177`*^9}, {3.933020807807664*^9, 3.933020839956521*^9}, {
   3.933021359142934*^9, 3.933021406116487*^9}, {3.93302153202099*^9, 
   3.933021625179017*^9}, {3.933021756874221*^9, 3.933021770233739*^9}, {
   3.933022036219294*^9, 3.9330220890142717`*^9}, {3.933072447491826*^9, 
   3.933072458017561*^9}, {3.9330725294256153`*^9, 3.9330726038548098`*^9}, {
   3.9330726405748167`*^9, 3.933072640638085*^9}, {3.933074115787285*^9, 
   3.9330741982240458`*^9}, {3.933077886481501*^9, 3.9330778945669403`*^9}, {
   3.933078882831479*^9, 3.933078906694996*^9}, {3.933079308788538*^9, 
   3.9330793269750023`*^9}, {3.933079444320277*^9, 3.933079502612687*^9}, {
   3.9330795513355637`*^9, 3.93307955152671*^9}, {3.933079783105441*^9, 
   3.933079792225799*^9}, {3.933079842180068*^9, 3.933079842452745*^9}, {
   3.933080863107709*^9, 3.9330809619652843`*^9}, {3.933082963014209*^9, 
   3.933083018433371*^9}, {3.9330858578537693`*^9, 3.93308609923354*^9}, {
   3.933086150394744*^9, 3.933087036857698*^9}, {3.933087462303022*^9, 
   3.933087462803995*^9}, {3.933092145519177*^9, 3.933092173527566*^9}, 
   3.933095097338871*^9, 3.933249992201087*^9, {3.9332502313303013`*^9, 
   3.933250231644203*^9}, {3.933250394437948*^9, 3.933250394903894*^9}, {
   3.934454704429697*^9, 3.934454709260497*^9}, {3.934537162030683*^9, 
   3.9345371626377897`*^9}, {3.934537227219688*^9, 3.934537271538291*^9}, {
   3.9345379151286993`*^9, 3.934537922850565*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"a2389f05-d046-4353-97d6-68eadeaff8a7"],

Cell["Normalized gadget actions:", "Text",
 CellChangeTimes->{{3.93308744720473*^9, 
  3.933087452599996*^9}},ExpressionUUID->"01406583-d964-4a75-bb01-\
91e89e388b99"],

Cell[BoxData[{
 RowBox[{"FF", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"ff", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"GG", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"gg", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"HH", " ", ":=", " ", 
   RowBox[{"NormalizedGadgetAction", "[", 
    RowBox[{"hh", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"FFInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"ffInv", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"GGInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"ggInv", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"HHInv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"hhInv", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.93308745713699*^9, 3.933087463917323*^9}, {
   3.933091692460969*^9, 3.9330917067397842`*^9}, {3.933091822233132*^9, 
   3.933091848795766*^9}, {3.9330919302191877`*^9, 3.933091930665802*^9}, {
   3.933092055557994*^9, 3.933092057546723*^9}, {3.9330921411836767`*^9, 
   3.933092242911118*^9}, {3.9330922750756283`*^9, 3.933092275863901*^9}, {
   3.933093060420321*^9, 3.933093065397625*^9}, {3.933093321930017*^9, 
   3.9330933478617983`*^9}, {3.933093491395143*^9, 3.9330934996852417`*^9}, 
   3.933093594249324*^9, {3.933094145961307*^9, 3.9330941472974777`*^9}, {
   3.933095102252151*^9, 3.933095106884737*^9}, {3.9332499829438972`*^9, 
   3.9332499838556767`*^9}, {3.933250239270071*^9, 3.933250240687208*^9}, {
   3.933250478104957*^9, 3.933250483524225*^9}, {3.9332505767364283`*^9, 
   3.9332505773317747`*^9}, {3.9344547138810472`*^9, 
   3.9344547212139883`*^9}, {3.934537929410635*^9, 3.934537934511216*^9}, {
   3.934549906981909*^9, 3.934549955002591*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"71d98d45-2c35-43ba-a5eb-86a38814887a"],

Cell["Verify inverses:", "Text",
 CellChangeTimes->{{3.9339421507214823`*^9, 
  3.933942153833373*^9}},ExpressionUUID->"b872391c-4fba-45a0-9d7b-\
690ee89269d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"-", 
   RowBox[{"FF", ".", "FFInv"}]}], " ", "==", " ", 
  RowBox[{"-", 
   RowBox[{"FFInv", ".", "FF"}]}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"GG", ".", "GGInv"}], " ", "==", " ", 
  RowBox[{"GGInv", ".", "GG"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"HH", ".", "HHInv"}], " ", "==", " ", 
  RowBox[{"HHInv", ".", "HH"}], " ", "==", " ", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "Code",
 CellChangeTimes->{{3.933079392423984*^9, 3.933079404887628*^9}, {
  3.933087039345593*^9, 3.933087075556686*^9}, {3.9330929842593327`*^9, 
  3.933092993181624*^9}, {3.933093055379863*^9, 3.933093058995432*^9}, {
  3.933093598483747*^9, 3.933093617596081*^9}, {3.9330951121848793`*^9, 
  3.9330951140141163`*^9}, {3.934454725348989*^9, 3.934454730857636*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"caf6ce15-87b8-4181-871c-ca89fb65f02a"],

Cell["Classical intractability test:", "Text",
 CellChangeTimes->{{3.932853344974996*^9, 
  3.932853354373929*^9}},ExpressionUUID->"c7f28ed2-6dbc-4f12-ac97-\
1f4c2d67c1d0"],

Cell[BoxData[{
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "T+P"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {T+P}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"FF", ",", " ", "GG", ",", " ", "HH", ",", " ", 
    RowBox[{"-", "FFInv"}], ",", " ", "GGInv", ",", " ", "HHInv"}], 
   "}"}]}], "\n", 
 RowBox[{"IsElementary", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "T+P"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {T+P}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsDiscrete", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "T+P"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {T+P}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}], "\n", 
 RowBox[{"IsLoxodromic", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "T+P"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {T+P}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}]}], "Code",
 CellChangeTimes->{{3.933079331290641*^9, 3.933079339128931*^9}, {
   3.933079798514102*^9, 3.933079798615436*^9}, 3.933085861727315*^9, {
   3.933087496380464*^9, 3.933087500186941*^9}, {3.9330876569586143`*^9, 
   3.9330876573419313`*^9}, 3.9330951327494907`*^9, {3.934454777728066*^9, 
   3.934454779987404*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"a04c1f67-0dfc-44d2-a43d-886d479e5ef7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commuting CCC Classification (Appendix B)", "Section",
 CellChangeTimes->{{3.9345496735293627`*^9, 
  3.934549679968733*^9}},ExpressionUUID->"6039f564-0a97-4cef-afc6-\
10fbfe5a9cd3"],

Cell["\<\
Here, we compute the gadgets that appear in the proof of Lemma B.2 in \
Appendix B. Note, because these are symbolic calculations, keep in mind that \
the symbolic outputs may differ from what we give in the paper, despite the \
fact that they are mathematically equivalent.\
\>", "Text",
 CellChangeTimes->{{3.934537307056725*^9, 3.934537387132731*^9}, {
  3.934537787375293*^9, 3.934537821168438*^9}, {3.934541010461093*^9, 
  3.934541027676346*^9}, {3.9345448840814734`*^9, 3.93454498950638*^9}, {
  3.934549517707807*^9, 3.934549519524911*^9}, {3.934549693013372*^9, 
  3.934549745060783*^9}},ExpressionUUID->"8f8ae210-c6f5-4ba6-b8d6-\
5a366a31d7cf"],

Cell[CellGroupData[{

Cell["The Gadgets and Their Actions", "Subsection",
 CellChangeTimes->{{3.934549529234189*^9, 3.934549578794251*^9}, {
  3.934549752492641*^9, 
  3.934549752703383*^9}},ExpressionUUID->"40e6fe63-613c-474d-875e-\
9a780040b3f7"],

Cell[TextData[{
 "We begin as in Lemma B.2, and assume the conjugating U is a real rotation \
by \[Theta] about the x-axis, and we assume later that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[NotElement]", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\not \\in \\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2551e078-0368-47ed-80ac-e5d7985ab38e"],
 "."
}], "Text",
 CellChangeTimes->{{3.934549805090516*^9, 
  3.934549845996421*^9}},ExpressionUUID->"d5f1f67e-3fd7-4e9a-adb6-\
d5f5075802b3"],

Cell[BoxData[{
 RowBox[{"U", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], ",", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"$Assumptions", " ", "=", " ", 
  RowBox[{"Element", "[", 
   RowBox[{"\[Theta]", ",", " ", "Reals"}], "]"}]}], "\n", 
 RowBox[{"UInv", " ", ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ConjugateTranspose", "[", "U", "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.93326169349057*^9, 3.933261794199237*^9}, {
   3.933261826655726*^9, 3.9332618470450983`*^9}, {3.933261894310856*^9, 
   3.933261910815228*^9}, {3.933261979378252*^9, 3.933262065122966*^9}, {
   3.933262188600606*^9, 3.933262195633638*^9}, {3.9332653591321163`*^9, 
   3.933265363242201*^9}, {3.9332657019513283`*^9, 3.933265705413463*^9}, {
   3.933267731192466*^9, 3.93326773206747*^9}, {3.93326834307684*^9, 
   3.933268343961595*^9}, {3.933268376350719*^9, 3.9332684036584873`*^9}, {
   3.933268495425294*^9, 3.933268495890852*^9}, {3.9332687101625023`*^9, 
   3.933268710538518*^9}, {3.9332687407363157`*^9, 3.933268799186223*^9}, {
   3.933268923162654*^9, 3.933268938214727*^9}, 3.933269047244665*^9, 
   3.9333415863521013`*^9, 3.933341637452545*^9, {3.93354170179039*^9, 
   3.933541750450639*^9}, {3.93354187357445*^9, 3.933541894520849*^9}, {
   3.933541926150264*^9, 3.9335419364111023`*^9}, 3.933542030284446*^9, {
   3.9335420961010036`*^9, 3.933542098392311*^9}, {3.933695614536396*^9, 
   3.933695625752096*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"bfdaeb90-38d8-4f89-84b3-f3547bba88ba"],

Cell["Gadgets and their inverses: ", "Text",
 CellChangeTimes->{{3.934537415757228*^9, 3.934537432875313*^9}, {
  3.9345379730864143`*^9, 
  3.934537974630085*^9}},ExpressionUUID->"1217353b-df84-4501-9f86-\
0339461177eb"],

Cell[BoxData[{
 RowBox[{"b0", " ", ":=", " ", 
  RowBox[{"SWAP", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"b1", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"b2", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"b3", " ", ":=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"UInv", ",", "UInv", ",", "UInv"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"CZ", ",", " ", "S"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"S", ",", " ", "CZ"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"U", ",", "U", ",", "U"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{"b0Inv", " ", ":=", " ", 
  RowBox[{"SWAP", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"S", ",", "Z"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"b1Inv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"b2Inv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv"}], "]"}], ".", "CZ", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U"}], "]"}]}]}], "\n", 
 RowBox[{"b3Inv", " ", ":=", " ", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"UInv", ",", "UInv", ",", "UInv"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"CZ", ",", " ", "S"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"S", ",", " ", "CZ"}], "]"}], ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U", ",", "U", ",", "U"}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.933676284699469*^9, 3.933676349470536*^9}, {
   3.933676435669837*^9, 3.933676435738738*^9}, {3.9336766552512207`*^9, 
   3.9336766815110598`*^9}, {3.933680493346259*^9, 3.9336805063490543`*^9}, {
   3.933681148108594*^9, 3.933681178099571*^9}, {3.9336831748145514`*^9, 
   3.9336833144507437`*^9}, {3.9336834818511066`*^9, 3.933683488071842*^9}, {
   3.933695980917714*^9, 3.933695995126814*^9}, {3.9336961372588367`*^9, 
   3.933696137340645*^9}, {3.933696464274448*^9, 3.9336964877511997`*^9}, {
   3.933696532278686*^9, 3.933696547622286*^9}, 3.9336966204120483`*^9, {
   3.933696684757431*^9, 3.9336967141021833`*^9}, {3.933696758849648*^9, 
   3.933696767816115*^9}, {3.933696835119854*^9, 3.933696837159852*^9}, {
   3.933696875808675*^9, 3.933696878519534*^9}, {3.933875910260178*^9, 
   3.933875911294094*^9}, {3.933941812741589*^9, 3.933942077484961*^9}, {
   3.933942196819481*^9, 3.933942304848196*^9}, {3.9339474903128767`*^9, 
   3.933947495202441*^9}, {3.9339476904217443`*^9, 3.933947718298482*^9}, {
   3.933947760080379*^9, 3.93394777892164*^9}, {3.933947861493905*^9, 
   3.933947861654503*^9}, {3.93394789493585*^9, 3.933947894989201*^9}, {
   3.9339480588377247`*^9, 3.933948102660935*^9}, {3.933949306460156*^9, 
   3.933949321563458*^9}, {3.933950753898313*^9, 3.933950758750963*^9}, {
   3.9339509013036747`*^9, 3.933950901824123*^9}, {3.933951294208403*^9, 
   3.9339512961244793`*^9}, {3.933952502902195*^9, 3.9339525113778057`*^9}, {
   3.933952590204178*^9, 3.933952612441814*^9}, {3.933958656576524*^9, 
   3.933958659227481*^9}, {3.934478802398633*^9, 3.9344788048402863`*^9}, {
   3.9345374504512463`*^9, 3.934537450842868*^9}, {3.934537549400332*^9, 
   3.9345375664658833`*^9}, {3.934537653935245*^9, 3.934537676365259*^9}, {
   3.934537957655257*^9, 3.9345379702145452`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"76623319-95cd-4b3e-a2a5-f460c8d8533f"],

Cell["UN-normalized gadget actions:", "Text",
 CellChangeTimes->{{3.934537465595706*^9, 3.934537477249816*^9}, {
  3.934537761283989*^9, 
  3.93453777530241*^9}},ExpressionUUID->"38c9b042-370e-441f-a408-\
9733605a8bdb"],

Cell[BoxData[{
 RowBox[{"unB0", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b0", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"unB1", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b1", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"unB2", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b2", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"unB3", " ", ":=", " ", 
   RowBox[{"GadgetAction", "[", 
    RowBox[{"b3", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"unB0Inv", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b0Inv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{"unB1Inv", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b1Inv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{"unB2Inv", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b2Inv", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"unB3Inv", " ", ":=", " ", 
  RowBox[{"GadgetAction", "[", 
   RowBox[{"b3Inv", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.934537551087846*^9, 3.934537587479748*^9}, {
  3.934537686414755*^9, 3.9345377201677933`*^9}, {3.934537977999222*^9, 
  3.9345379869262877`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"b58aa8dd-53df-424a-8ed0-46f7a4bc649b"],

Cell["Determinants:", "Text",
 CellChangeTimes->{{3.93453748369796*^9, 3.934537485066023*^9}, 
   3.934537759455203*^9},ExpressionUUID->"786cf8f2-190c-4fb6-8358-\
7b464ab35442"],

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB0", "]"}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB1", "]"}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB2", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Det", "[", "unB3", "]"}], "]"}], "\n"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB0Inv", "]"}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB1Inv", "]"}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB2Inv", "]"}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "unB3Inv", "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.934537600185948*^9, 3.934537613431521*^9}, {
   3.934537734586265*^9, 3.934537745893929*^9}, {3.9345379926631002`*^9, 
   3.9345380017336493`*^9}, {3.934544828122677*^9, 3.9345448598322573`*^9}, 
   3.9345498595816393`*^9},ExpressionUUID->"9877222f-077d-439b-b7fb-\
2585c49dd916"],

Cell[TextData[{
 "Normalized gadget actions (which, by the determinants above, exist if ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[NotElement]", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\not \\in \\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "55d18a1f-3489-4346-99e0-c970cd696a22"],
 "):"
}], "Text",
 CellChangeTimes->{{3.934537490709875*^9, 3.934537539037466*^9}, {
  3.934537754704607*^9, 
  3.9345377787495327`*^9}},ExpressionUUID->"e7727cce-44ef-4deb-ae8a-\
d46e2a35470e"],

Cell[BoxData[{
 RowBox[{"B0", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b0", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"B1", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b1", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"B2", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b2", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"B3", " ", ":=", " ", 
   RowBox[{"NormalizedGadgetAction", "[", 
    RowBox[{"b3", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"B0Inv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b0Inv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{"B1Inv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b1Inv", ",", " ", 
    RowBox[{"{", "1", "}"}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", 
 RowBox[{"B2Inv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b2Inv", ",", " ", 
    RowBox[{"{", "0", "}"}], ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}]}], "\n", 
 RowBox[{"B3Inv", " ", ":=", " ", 
  RowBox[{"NormalizedGadgetAction", "[", 
   RowBox[{"b3Inv", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.934537572621275*^9, 3.934537589447175*^9}, {
  3.934537728694854*^9, 3.934537729080596*^9}, {3.934537836851666*^9, 
  3.9345378385875273`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"e9ce5e2c-a854-41fa-b61b-3a0ee54cc450"],

Cell["Verify inverses:", "Text",
 CellChangeTimes->{{3.933958640270042*^9, 3.9339586430449867`*^9}, {
  3.9345380195081367`*^9, 
  3.934538021036727*^9}},ExpressionUUID->"46549191-29e1-4ef2-9b13-\
8b06a69d8def"],

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"B0", ".", "B0Inv"}], " ", "==", " ", 
   RowBox[{"B0Inv", ".", "B0"}], " ", "==", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"B1", ".", "B1Inv"}], " ", "==", " ", 
   RowBox[{"B1Inv", ".", "B1"}], " ", "==", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"B2", ".", "B2Inv"}], " ", "==", " ", 
   RowBox[{"B2Inv", ".", "B2"}], " ", "==", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"B3", ".", "B3Inv"}]}], " ", "==", " ", 
   RowBox[{"-", 
    RowBox[{"B3Inv", ".", "B3"}]}], " ", "==", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9339587431643867`*^9, 3.933958852652665*^9}, {
  3.934020206705818*^9, 3.934020370862268*^9}, {3.934020452967483*^9, 
  3.93402045860707*^9}, {3.934537647840147*^9, 3.9345376734232616`*^9}, {
  3.9345380244452467`*^9, 3.934538072821642*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"d3a86af9-aef5-4d72-ae2b-b9a5732f209c"],

Cell["\<\
Now define our collection of normalized post-selection actions in SL(2;C):\
\>", "Text",
 CellChangeTimes->{{3.9339421819442797`*^9, 3.9339421864064713`*^9}, {
  3.934538176644052*^9, 3.93453820209977*^9}, {3.934545134279274*^9, 
  3.934545168596187*^9}, {3.934545198862502*^9, 3.93454519990676*^9}, {
  3.934546259968545*^9, 3.9345462839059677`*^9}, {3.934546473658915*^9, 
  3.934546478638626*^9}},ExpressionUUID->"192688c2-e277-41b4-b467-\
d0fb3d8207f4"],

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox["\[CapitalGamma]", "com"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\Gamma_ {\\text {com}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
   "B0", ",", " ", "B1", ",", " ", "B2", ",", " ", "B3", ",", " ", "B0Inv", 
    ",", " ", "B1Inv", ",", " ", "B2Inv", ",", " ", 
    RowBox[{"-", "B3Inv"}]}], "}"}]}]], "Code",
 CellChangeTimes->{{3.934546250827587*^9, 3.9345462520352173`*^9}, {
  3.934546285185788*^9, 3.9345463478820267`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"74df01d7-b95f-4bf2-99ae-3dc275e90c62"],

Cell["\<\
We break the classical intractability tests up to more easily verify our \
computations.\
\>", "Text",
 CellChangeTimes->{{3.9345462784852448`*^9, 
  3.934546281368469*^9}},ExpressionUUID->"05c1ff78-42dc-4fa5-bb7d-\
a86854814589"]
}, Closed]],

Cell[CellGroupData[{

Cell["Elementarity Test", "Subsection",
 CellChangeTimes->{{3.934545203742467*^9, 3.934545220392132*^9}, {
  3.934549758240905*^9, 
  3.934549758777813*^9}},ExpressionUUID->"77a621de-c3a6-44b9-a335-\
9e984dd3349d"],

Cell[TextData[{
 "It is easy to see that if ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[NotElement]", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\not \\in \\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6af72852-60d2-4929-8d39-9de3e6ea8eeb"],
 ", then ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsElementary", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "ELEMENTARY"}]}]], "InlineCode",ExpressionUUID->
  "fcb63695-59e0-4a08-ac0c-b17481cde465"],
 " because:"
}], "Text",
 CellChangeTimes->{{3.9345461878061333`*^9, 3.9345462216475267`*^9}, {
  3.934546354066221*^9, 3.934546410289315*^9}, {3.934546886896193*^9, 
  3.934546888614787*^9}},ExpressionUUID->"7c6a6daa-09a3-4ae0-adaa-\
aeb9416461cd"],

Cell[BoxData[{
 RowBox[{"\[Beta]", "[", "B0", "]"}], "\n", 
 RowBox[{"\[Beta]", "[", "B3", "]"}], "\n", 
 RowBox[{"\[Gamma]", "[", 
  RowBox[{"B0", ",", "B3"}], "]"}]}], "Code",
 CellChangeTimes->{
  3.933942195138464*^9, {3.933955478613966*^9, 3.933955485218109*^9}, {
   3.933957144182455*^9, 3.9339571452897253`*^9}, {3.934538212433463*^9, 
   3.93453822622287*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"27d9ec02-95b9-438e-a747-3cbfaba074cc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Discreteness Test", "Subsection",
 CellChangeTimes->{{3.934545216814296*^9, 3.93454521810061*^9}, {
  3.934549762421579*^9, 
  3.934549762879755*^9}},ExpressionUUID->"fd56d8c3-ca55-49f7-a646-\
979d6599a587"],

Cell["\<\
We break this test up into three cases, as in the paper. The three cases rely \
on the following eight values:\
\>", "Text",
 CellChangeTimes->{{3.9345467528653517`*^9, 3.93454675741649*^9}, {
  3.934546941345604*^9, 3.9345469418376493`*^9}, {3.934547328112192*^9, 
  3.934547383771113*^9}, {3.934547606353194*^9, 
  3.934547606839974*^9}},ExpressionUUID->"5808e0b5-653c-4724-8739-\
0b88357b3524"],

Cell[BoxData[{
 RowBox[{"a", " ", ":=", " ", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"3", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], "]"}]}]}], "\n", 
 RowBox[{"b", " ", ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "/", "5"}], "]"}]}]}], "\n", 
 RowBox[{"c", " ", ":=", " ", 
  RowBox[{"Pi", " ", "-", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"-", "3"}], "/", "5"}], "]"}]}]}]}], "\n", 
 RowBox[{"d", " ", ":=", " ", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"3", "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}], "]"}]}]}], "\n", 
 RowBox[{"e", " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"3", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], "]"}]}], " ", "+", " ", 
   RowBox[{"2", " ", "Pi"}]}]}], "\n", 
 RowBox[{"f", " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"-", "3"}], "/", "5"}], "]"}]}], " ", "+", " ", 
   "Pi"}]}], "\n", 
 RowBox[{"g", " ", ":=", " ", 
  RowBox[{
   RowBox[{"2", " ", "Pi"}], " ", "-", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"-", "3"}], "/", "5"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"h", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"3", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"2", " ", "Pi"}]}]}], "\n"}], "\n", 
 RowBox[{"N", "[", "a", "]"}], "\n", 
 RowBox[{"N", "[", "b", "]"}], "\n", 
 RowBox[{"N", "[", "c", "]"}], "\n", 
 RowBox[{"N", "[", "d", "]"}], "\n", 
 RowBox[{"N", "[", "e", "]"}], "\n", 
 RowBox[{"N", "[", "f", "]"}], "\n", 
 RowBox[{"N", "[", "g", "]"}], "\n", 
 RowBox[{"N", "[", "h", "]"}]}], "Code",
 CellChangeTimes->{{3.93454738814826*^9, 3.934547579299333*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"45e56b21-dd2e-418f-b9e7-b9db8b65f2d8"],

Cell[CellGroupData[{

Cell[TextData[{
 "Case 1: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[Element]", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"[", 
               RowBox[{"0", ",", 
                 StyleBox["a", "TI"]}], ")"}], "\[Union]", 
             RowBox[{"(", 
               RowBox[{
                 StyleBox["h", "TI"], ",", "2", "\[Pi]"}], ")"}]}], ")"}], 
         "\\", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\in ( [0,a) \\cup (h,2\\pi) ) \\backslash \
\\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d9534379-ce56-49ef-bde0-2ee2a668a652"]
}], "Subsubsection",
 CellChangeTimes->{{3.934546176448029*^9, 3.934546178386095*^9}, {
  3.934546733017165*^9, 3.934546740730021*^9}, {3.9345473693439302`*^9, 
  3.934547370317278*^9}, {3.9345476107243547`*^9, 
  3.934547638762184*^9}},ExpressionUUID->"64bd4b0c-444a-431b-9860-\
f860a34b6ae6"],

Cell[TextData[{
 "First, we check that over this interval, the square of the trace of gadget ",
 Cell[BoxData[
 "B2"], "InlineCode",ExpressionUUID->"197126e3-2e17-4605-bec5-702804a0b3ff"],
 " is not 1:"
}], "Text",
 CellChangeTimes->{{3.934547675908866*^9, 
  3.9345477105856247`*^9}},ExpressionUUID->"8356ba83-cb34-4315-948a-\
e1734ac96f2b"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Tr", "[", "B2", "]"}], "^", "2"}], "]"}]], "Code",
 CellChangeTimes->{
  3.9345477177571383`*^9, {3.934547801372869*^9, 3.9345478289320707`*^9}, {
   3.934547892426848*^9, 3.934547892826473*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"b22a27f3-788c-402a-8c4a-d5c69a4108c9"],

Cell[TextData[{
 "Thus, up to symbolic manipulation, the square of the trace of gadget ",
 Cell[BoxData[
 "B2"], "InlineCode",ExpressionUUID->"2b78364d-97b5-486a-965a-9dcc846bd6d0"],
 " is ",
 Cell[BoxData[
  RowBox[{"2", "-", 
   FractionBox[
    RowBox[{"8", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}]],ExpressionUUID->
  "0ba7ef40-21be-4aeb-8215-5c5ca79b7c37"],
 ". The values of \[Theta] where this equals 1 is given by:"
}], "Text",
 CellChangeTimes->{{3.934547722383637*^9, 3.934547726379253*^9}, {
  3.934547848227866*^9, 3.934547881139876*^9}, {3.934547916489414*^9, 
  3.934548028536569*^9}, {3.934548649295788*^9, 3.934548658728215*^9}, {
  3.934550162437101*^9, 
  3.934550168820156*^9}},ExpressionUUID->"a0eabe73-44b1-4758-a770-\
71c337ee4dfa"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "-", " ", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{"3", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}], " ", "==", " ", "1"}], 
   ",", " ", "\[Theta]", ",", " ", "Reals"}], "]"}]], "Code",
 CellChangeTimes->{
  3.9340259239418917`*^9, {3.934041874437798*^9, 3.934041897656172*^9}, {
   3.934041987095121*^9, 3.934042012947751*^9}, {3.934042253707087*^9, 
   3.9340422844182158`*^9}, {3.93404236733022*^9, 3.934042498947637*^9}, {
   3.9340425898800087`*^9, 3.934042638048937*^9}, {3.934042673849433*^9, 
   3.934042695151218*^9}, {3.934043659809414*^9, 3.934043692156876*^9}, {
   3.9344620855450077`*^9, 3.934462086964014*^9}, {3.9345382787609463`*^9, 
   3.934538279045595*^9}, {3.9345479937820253`*^9, 3.934548038968055*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"36d80a83-493f-4359-bc79-917fb08fef9b"],

Cell[TextData[{
 "So, for \[Theta] in this case, the square of the trace of gadget ",
 Cell[BoxData[
 "B2"], "InlineCode",ExpressionUUID->"d4e72763-7c4b-4976-81a1-46a291418180"],
 " is never 1. We may therefore use ",
 Cell[BoxData[
 "IsDiscreteSubtest4"], "InlineCode",ExpressionUUID->
  "bf996834-dc3c-4a94-a166-bc6e82a318e2"],
 " to infer discreteness. Using this test with ",
 Cell[BoxData[
 "B0"], "InlineCode",ExpressionUUID->"78a47c3f-88a1-45b4-8ad1-ba980cc905a0"],
 " and ",
 Cell[BoxData[
 "B2"], "InlineCode",ExpressionUUID->"c98ef4c2-029b-48ac-bce0-ffedf2d2c038"],
 ", we find:"
}], "Text",
 CellChangeTimes->{{3.934548061093357*^9, 3.934548135205646*^9}, {
  3.93454914536994*^9, 
  3.934549177437183*^9}},ExpressionUUID->"b21df411-7a29-4cf5-8a53-\
7928e50f53d3"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tr", "[", "B2", "]"}], "^", "2"}], " ", "-", " ", "1"}], "]"}],
    " ", "+", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"Tr", "[", 
     RowBox[{"B2", ".", "B0", ".", 
      RowBox[{"Inverse", "[", "B2", "]"}], ".", 
      RowBox[{"Inverse", "[", "B0", "]"}]}], "]"}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{
  3.934548093468996*^9, {3.934548124926815*^9, 3.934548142483201*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"cb7009a7-b7e1-46df-a50a-85add3841d0b"],

Cell[TextData[{
 "Thus, up to symbolic manipulation, the value central to IsDiscreteSubtest4 \
is ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"3", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "]"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}], "4"]}]}], 
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]],ExpressionUUID->
  "3860e1aa-c210-4ce6-a65d-04f4afd3d91e"],
 ". The values of \[Theta] where this is strictly less than 1 is given by:"
}], "Text",
 CellChangeTimes->{{3.9345482198250227`*^9, 3.9345482573406267`*^9}, {
  3.9345486737440777`*^9, 
  3.934548676152165*^9}},ExpressionUUID->"2f900535-b4eb-40f1-919b-\
29b9f9063353"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"3", " ", "-", " ", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "]"}], " ", "+", " ", 
        RowBox[{"8", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "/", "2"}], "]"}], "^", "4"}]}]}], ")"}], "/", 
      
      RowBox[{"(", 
       RowBox[{"3", " ", "+", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], " ", "<", " ", 
     "1"}], ",", " ", "\[Theta]", ",", " ", "Reals"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.934548155512844*^9, 3.934548175376094*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"6f3ad4b0-ff1b-440d-9674-bd65b1393815"],

Cell[TextData[{
 "Thus, one sees that indeed for \[Theta] in this case, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsDiscrete", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "DISCRETE"}]}]], "InlineCode",ExpressionUUID->
  "f5b20452-821b-404a-a7dd-9df35385819a"],
 ". (To see this conclusion, one may have to use the fact that: ",
 Cell[BoxData[
 "a"], "InlineCode",ExpressionUUID->"70accad0-fed6-4d02-b7dd-7ccb5c138798"],
 " = ",
 Cell[BoxData[
  RowBox[{"4", " ", 
   RowBox[{"ArcTan", "[", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SqrtBox["3"]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"3", "+", 
         SqrtBox["3"]}]]}]}]], "]"}]}]],ExpressionUUID->
  "db488919-ed94-4a27-9e1b-298ad9b1f8d3"],
 ")."
}], "Text",
 CellChangeTimes->{{3.93454826122716*^9, 3.9345483277296867`*^9}, {
   3.93454837233692*^9, 3.934548413468513*^9}, {3.934548477176487*^9, 
   3.934548491622069*^9}, 
   3.9345486827206173`*^9},ExpressionUUID->"0f588952-43a6-4b32-892b-\
f442b937281d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Case 2: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[Element]", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 StyleBox["b", "TI"], ",", 
                 StyleBox["c", "TI"]}], ")"}], "\[Union]", 
             RowBox[{"(", 
               RowBox[{
                 StyleBox["f", "TI"], ",", 
                 StyleBox["g", "TI"]}], ")"}]}], ")"}], "\\", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\in ((b,c) \\cup (f,g)) \\backslash \
\\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "769bc341-3c03-4954-a76a-1058a866e0de"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.934548692516371*^9, 
  3.934548731956808*^9}},ExpressionUUID->"ad7801ca-419a-4ef5-b776-\
beb64a241fda"],

Cell[TextData[{
 "Since we already know that for \[Theta] in this case, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsElementary", "[", 
    RowBox[{"{", 
     RowBox[{"B0", ",", "B3"}], "}"}], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "ELEMENTARY"}]}]], "InlineCode",ExpressionUUID->
  "39c5c5a3-1a0a-4b22-b99d-d2f31dba6cba"],
 ", we can apply ",
 Cell[BoxData[
 "IsDiscreteSubtest1"], "InlineCode",ExpressionUUID->
  "a92d6478-2767-485c-88d8-0c577dee3051"],
 ". The essential quantity to consider is then:"
}], "Text",
 CellChangeTimes->{{3.934548755293976*^9, 
  3.934548813386188*^9}},ExpressionUUID->"01c3c5d5-994d-4b2a-a253-\
855415b9fd67"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tr", "[", "B3", "]"}], "^", "2"}], " ", "-", " ", "4"}], "]"}],
    " ", "+", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"B3", ".", "B0", ".", 
       RowBox[{"Inverse", "[", "B3", "]"}], ".", 
       RowBox[{"Inverse", "[", "B0", "]"}]}], "]"}], " ", "-", " ", "2"}], 
    "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.934025943718552*^9, 3.934026000465613*^9}, {
  3.934026346195179*^9, 3.934026347690988*^9}, {3.9345488165730886`*^9, 
  3.934548832180438*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"7d09484e-cfe9-4298-a79a-3568a381d8dd"],

Cell[TextData[{
 "Thus, up to symbolic manipulation, the value central to IsDiscreteSubtest1 \
is ",
 Cell[BoxData[
  RowBox[{"6", "-", 
   FractionBox["12", 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}]],ExpressionUUID->
  "df36634f-d618-4b6c-9c10-15f0cb363899"],
 ". The values of \[Theta] where this is strictly less than 1 is given by:"
}], "Text",
 CellChangeTimes->{{3.934548847764551*^9, 
  3.934548858268651*^9}},ExpressionUUID->"a18fe969-3229-43e2-8861-\
a744b0228766"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"6", " ", "-", " ", 
     FractionBox["12", 
      RowBox[{"3", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}], " ", "<", " ", "1"}], ",",
    " ", "\[Theta]", ",", " ", "Reals"}], "]"}]], "Code",
 CellChangeTimes->{{3.934548838841052*^9, 3.934548870146118*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"3401efc8-5961-45be-bf06-659cb24bca08"],

Cell[TextData[{
 "Thus, one sees that indeed for \[Theta] in this case, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsDiscrete", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "DISCRETE"}]}]], "InlineCode",ExpressionUUID->
  "fe6be6b3-4b99-4693-b520-981a1f05c193"],
 "."
}], "Text",
 CellChangeTimes->{
  3.934548961157282*^9},ExpressionUUID->"d9fb351a-240a-467f-aed1-\
a3e41cef8114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Case 3: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[Element]", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["d", "TI"], ",", 
             StyleBox["e", "TI"]}], ")"}], "\\", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\in (d,e) \\backslash \\frac{\\pi}{2}\\mathbb{Z}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8eb04905-1bd6-475c-977b-db127e53e806"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.934548966664839*^9, 
  3.934548994599102*^9}},ExpressionUUID->"e9c4fce8-269c-4488-b715-\
9624c3354d44"],

Cell[TextData[{
 "First, we check that over this interval, the square of the trace of gadget ",
 Cell[BoxData[
 "B1"], "InlineCode",ExpressionUUID->"17018b73-2d76-4cae-83f2-9f06d5e9a108"],
 " is not 1:"
}], "Text",
 CellChangeTimes->{{3.934549011623646*^9, 
  3.934549026921298*^9}},ExpressionUUID->"46f532b4-6281-40a0-9558-\
10fd6bb97d79"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Tr", "[", "B1", "]"}], "^", "2"}], "]"}]], "Code",
 CellChangeTimes->{3.93454904652238*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"eb45bf4e-1bd3-45a0-b9fc-143281d23acd"],

Cell[TextData[{
 "Thus, up to symbolic manipulation, the square of the trace of gadget ",
 Cell[BoxData[
 "B1"], "InlineCode",ExpressionUUID->"425c5fd5-b555-4610-bbf3-5b797a790c0e"],
 " is ",
 Cell[BoxData[
  RowBox[{"2", "+", 
   FractionBox[
    RowBox[{"8", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}]],ExpressionUUID->
  "af53bbe6-b199-47f3-8849-93719c5ca81b"],
 ". The values of \[Theta] where this equals 1 is given by:"
}], "Text",
 CellChangeTimes->{{3.934549053365467*^9, 3.934549077374325*^9}, {
  3.934550237503557*^9, 
  3.934550245149054*^9}},ExpressionUUID->"d2e999ea-6428-40b9-95e1-\
97e26cca95d5"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "+", " ", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{"3", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}], " ", "==", " ", "1"}], 
   ",", " ", "\[Theta]", ",", " ", "Reals"}], "]"}]], "Code",
 CellChangeTimes->{3.934549110485137*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"a4c44a3b-fc46-490d-9a5c-a3b6a379f739"],

Cell[TextData[{
 "So, for \[Theta] in this case, the square of the trace of gadget ",
 Cell[BoxData[
 "B1"], "InlineCode",ExpressionUUID->"1e9527f3-511f-418b-b663-cf4f3e454af3"],
 " is never 1. We may therefore use ",
 Cell[BoxData[
 "IsDiscreteSubtest4"], "InlineCode",ExpressionUUID->
  "869a5320-d363-409e-bd7e-6a6e2408072d"],
 " to infer discreteness. Using this test with ",
 Cell[BoxData[
 "B0"], "InlineCode",ExpressionUUID->"e6ac486d-bf11-4e7b-9f01-9420b86cf351"],
 " and ",
 Cell[BoxData[
 "B1"], "InlineCode",ExpressionUUID->"1dbb0740-4ad7-4b4d-95a6-e8628bf22cc0"],
 ", we find:"
}], "Text",
 CellChangeTimes->{{3.934549135544096*^9, 
  3.934549173930686*^9}},ExpressionUUID->"5e763020-301c-42b7-be43-\
9914f2517b94"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tr", "[", "B1", "]"}], "^", "2"}], " ", "-", " ", "1"}], "]"}],
    " ", "+", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"Tr", "[", 
     RowBox[{"B1", ".", "B0", ".", 
      RowBox[{"Inverse", "[", "B1", "]"}], ".", 
      RowBox[{"Inverse", "[", "B0", "]"}]}], "]"}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9339509295025883`*^9, 3.933951087610469*^9}, {
  3.933957156570743*^9, 3.9339571868211203`*^9}, {3.933957218583351*^9, 
  3.933957220721499*^9}, {3.93395731366442*^9, 3.933957331526189*^9}, {
  3.933957365341597*^9, 3.933957393302717*^9}, {3.9339578907110147`*^9, 
  3.933957895862932*^9}, {3.933958113547001*^9, 3.933958141492334*^9}, {
  3.9339581867736073`*^9, 3.933958190314629*^9}, {3.934025931216305*^9, 
  3.934025950332144*^9}, {3.9340263657964897`*^9, 3.9340263710490103`*^9}, {
  3.9340417876151114`*^9, 3.934041831852551*^9}, {3.934549083444079*^9, 
  3.9345491064973173`*^9}, {3.934549188254509*^9, 3.934549193071678*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"e2845388-520b-4e24-9881-5fd68ee2d2d4"],

Cell[TextData[{
 "Thus, up to symbolic manipulation, the value central to IsDiscreteSubtest4 \
is ",
 Cell[BoxData[
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"3", "+", 
       RowBox[{"8", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]}]],ExpressionUUID->
  "49021d4f-949e-4075-ae6e-c7ac1d90f8dc"],
 ". The values of \[Theta] where this is strictly less than 1 is given by:"
}], "Text",
 CellChangeTimes->{{3.934549211808229*^9, 
  3.9345492275671043`*^9}},ExpressionUUID->"aaf00c72-ecf9-4ac0-8270-\
a138d164315e"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"3", " ", "+", " ", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "]"}], " ", "+", " ", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "+", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], " ", "<", " ", 
    "1"}], ",", " ", "\[Theta]", ",", " ", "Reals"}], "]"}]], "Code",
 CellChangeTimes->{
  3.934549200767681*^9, {3.93454923237886*^9, 3.9345492474435596`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"34e25172-1f1b-4757-adc6-8b17c3059527"],

Cell[TextData[{
 "Thus, one sees that indeed for \[Theta] in this case, ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsDiscrete", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "DISCRETE"}]}]], "InlineCode",ExpressionUUID->
  "1ccd8a67-f013-4dbd-ab20-abcfb89ce92b"],
 ". \n\nSince all these values of \[Theta] exhaust the interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"0", ",", "2", "\[Pi]"}], ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "[0,2\\pi)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f2c965a2-ae24-4681-887a-1e9ac0a8e680"],
 ", we have proven that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsDiscrete", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", 
   RowBox[{"NON", "-", "DISCRETE"}]}]], "InlineCode",ExpressionUUID->
  "43f92834-86aa-4083-bec1-2e14cc87f5d2"],
 " for all ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[NotElement]", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\not \\in \\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "da14e8fa-32c0-4a83-a919-17bb414fbdf9"],
 "."
}], "Text",
 CellChangeTimes->{{3.934549278220085*^9, 3.9345493501508493`*^9}, {
  3.934549467451631*^9, 
  3.9345494790508757`*^9}},ExpressionUUID->"e966e454-3a91-4be8-bf85-\
b814e0f7bdd2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Loxodromy Test", "Subsection",
 CellChangeTimes->{{3.934549356422598*^9, 3.934549357483458*^9}, {
  3.934549764064231*^9, 
  3.934549764510881*^9}},ExpressionUUID->"9cf3f918-b974-4251-96b4-\
f26f360c6f4a"],

Cell[TextData[{
 "It is easy to see that if ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Theta]", "\[NotElement]", 
         FractionBox["\[Pi]", "2"], 
         StyleBox["Z", FontSlant -> "Plain"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta \\not \\in \\frac{\\pi}{2}\\mathbb{Z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9202d157-73f7-48cf-8954-d06470ef21e4"],
 ", then ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IsLoxodromic", "[", 
    FormBox[
     SubscriptBox["\[CapitalGamma]", "com"],
     TraditionalForm], "]"}], " ", "=", " ", "LOXODROMIC"}]], "InlineCode",
  ExpressionUUID->"8e729ebc-81f8-468c-819f-ccf1a41bc12c"],
 " because:"
}], "Text",
 CellChangeTimes->{{3.9345493824773703`*^9, 
  3.934549410215354*^9}},ExpressionUUID->"d6df7f53-7e04-4de6-a0b6-\
6fe7ab424859"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Tr", "[", "B0", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.934549425001292*^9, 3.934549432188753*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"c8290570-1918-4b00-abee-2da9c7aeca46"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1792, 1067},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"a1539b74-b7c0-4501-a2c1-ddc9e3ec173a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 252, 4, 96, "Title",ExpressionUUID->"57d9e8aa-b72d-4be3-9d7b-2810628066d4"],
Cell[831, 28, 347, 5, 30, "Author",ExpressionUUID->"81d3853e-63ee-4181-bf6e-350df9589e2e"],
Cell[1181, 35, 376, 8, 53, "Affiliation",ExpressionUUID->"5c6915c3-0590-4db5-a7ac-e242e345f4c0"],
Cell[1560, 45, 278, 4, 30, "Item",ExpressionUUID->"b13e943f-66c1-4199-9db5-fa643eaa7f9e"],
Cell[CellGroupData[{
Cell[1863, 53, 390, 6, 66, "Section",ExpressionUUID->"ecd0123f-8395-48cd-8334-7e9b0d83dafe"],
Cell[2256, 61, 1515, 24, 110, "Text",ExpressionUUID->"3efe13e0-f1e6-4107-9212-43d962787a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3808, 90, 364, 6, 66, "Section",ExpressionUUID->"10de8a77-11a3-42dd-9d5f-8e325949309f"],
Cell[4175, 98, 533, 12, 32, "Text",ExpressionUUID->"0a41a128-397d-4b75-b134-10a1ebc7745e"],
Cell[4711, 112, 778, 20, 97, "Code",ExpressionUUID->"af3caf81-3bd9-467a-8d3e-c6758da7c8ec"],
Cell[5492, 134, 634, 16, 32, "Text",ExpressionUUID->"6cf1093f-2103-4d2e-85d2-848279c36c31"],
Cell[6129, 152, 1616, 41, 141, "Code",ExpressionUUID->"dd0725e1-388e-44c7-b1af-41f2aae1af59"],
Cell[7748, 195, 1364, 33, 32, "Text",ExpressionUUID->"62265eed-fcd0-41c7-9ff9-805c0d728ec0"],
Cell[9115, 230, 42935, 742, 348, "Text",ExpressionUUID->"fce78366-aa02-4f54-9821-20c54b9ba8a7"],
Cell[52053, 974, 2286, 50, 119, "Code",ExpressionUUID->"4ea79233-d866-4658-b5cc-2590e629704d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54376, 1029, 167, 3, 66, "Section",ExpressionUUID->"7817035d-57d9-454b-ac77-fad795931b8b"],
Cell[54546, 1034, 624, 17, 32, "Text",ExpressionUUID->"c1dbb8d2-23c6-4481-bdf4-cc5e6dfccf0c"],
Cell[CellGroupData[{
Cell[55195, 1055, 220, 4, 53, "Subsection",ExpressionUUID->"60752b36-8458-4f19-a79c-bcb75ba07688"],
Cell[55418, 1061, 1078, 22, 111, "Text",ExpressionUUID->"4cfcd2f8-9f7b-4c6b-9ac8-57336505c517"],
Cell[56499, 1085, 677, 19, 75, "Code",ExpressionUUID->"d04f1a09-9c5f-4103-8e71-55c8d50bbf39"],
Cell[57179, 1106, 529, 14, 32, "Text",ExpressionUUID->"82abac82-7cbd-466a-ae13-3a846e3446ea"],
Cell[57711, 1122, 6642, 143, 119, "Code",ExpressionUUID->"a98b0848-3eb9-46df-8090-165106d23bd5"],
Cell[64356, 1267, 537, 14, 32, "Text",ExpressionUUID->"364bfc26-94ee-46c3-a82d-bc6a2f8bd0a3"],
Cell[64896, 1283, 1247, 31, 97, "Code",ExpressionUUID->"1aa607ed-5469-46f8-ac71-a4cae640ea4e"]
}, Closed]],
Cell[CellGroupData[{
Cell[66180, 1319, 190, 3, 37, "Subsection",ExpressionUUID->"de2ffd7d-573b-4abc-8eae-6a94ac1bde7c"],
Cell[66373, 1324, 1172, 26, 112, "Text",ExpressionUUID->"08b867b4-157d-4847-b667-3e5265e6e523"],
Cell[67548, 1352, 12863, 307, 229, "Code",ExpressionUUID->"2d40e3f8-1884-4f22-86d8-d45f8e737062"],
Cell[80414, 1661, 484, 13, 32, "Text",ExpressionUUID->"09b8959a-08d0-4030-a2b8-b1f59aab0f9a"],
Cell[80901, 1676, 1239, 31, 97, "Code",ExpressionUUID->"60592201-f5bb-4b7f-9aa1-cb4392c40c47"]
}, Closed]],
Cell[CellGroupData[{
Cell[82177, 1712, 189, 3, 37, "Subsection",ExpressionUUID->"4188ff0a-6014-4b74-851d-3f8556cb615e"],
Cell[82369, 1717, 895, 19, 111, "Text",ExpressionUUID->"e8788c14-8877-43d7-b492-01c0ec872e87"],
Cell[83267, 1738, 1124, 20, 53, "Code",ExpressionUUID->"f720e184-b12c-439c-af6a-7b96f36f2c54"],
Cell[84394, 1760, 468, 13, 32, "Text",ExpressionUUID->"37c6a4c0-c873-4869-9c1d-4f0536211791"],
Cell[84865, 1775, 964, 25, 97, "Code",ExpressionUUID->"e724fc7c-975c-40fd-a293-cfa556c6e668"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85878, 1806, 307, 5, 66, "Section",ExpressionUUID->"4b01b828-a57a-45a3-bfca-0b26c80b5931"],
Cell[86188, 1813, 2514, 50, 134, "Text",ExpressionUUID->"f0ca53b2-1773-4cf0-a727-3af0093c1e70"],
Cell[88705, 1865, 6854, 172, 229, "Code",ExpressionUUID->"bdbe2597-f024-4eb8-99b0-5b5b56fab3d9"],
Cell[CellGroupData[{
Cell[95584, 2041, 211, 4, 53, "Subsection",ExpressionUUID->"d6f88208-82db-4a99-be33-73b3f2837cf6"],
Cell[95798, 2047, 222, 4, 31, "Text",ExpressionUUID->"10e46241-5cd0-4a2b-8f97-9e6e2161fb13"],
Cell[96023, 2053, 3249, 69, 185, "Code",ExpressionUUID->"7870d3f4-9f80-450b-96cd-221c8ada3e7a"],
Cell[99275, 2124, 168, 3, 31, "Text",ExpressionUUID->"7e081185-c926-43de-aa1f-795fa506b873"],
Cell[99446, 2129, 2524, 50, 185, "Code",ExpressionUUID->"3e360a9f-b2b9-4d25-80d8-6ba39dd91618"],
Cell[101973, 2181, 160, 3, 31, "Text",ExpressionUUID->"8c5dac80-d188-413c-acdc-c38066acd02c"],
Cell[102136, 2186, 1247, 24, 97, "Code",ExpressionUUID->"31662451-c00f-46de-b2c4-a9c23d29090e"],
Cell[103386, 2212, 172, 3, 31, "Text",ExpressionUUID->"4dcc280a-4493-442f-ac53-f43a203735fc"],
Cell[103561, 2217, 2279, 40, 127, "Code",ExpressionUUID->"172d652f-d3b3-40fe-be9c-1d9847d1e6f2"]
}, Closed]],
Cell[CellGroupData[{
Cell[105877, 2262, 296, 5, 37, "Subsection",ExpressionUUID->"1cde8eda-3db5-4737-ae8b-8ae2214222ee"],
Cell[106176, 2269, 701, 17, 32, "Text",ExpressionUUID->"1301582b-3482-4057-8098-be80d6dffc85"],
Cell[106880, 2288, 3064, 54, 75, "Code",ExpressionUUID->"6dc77277-9147-48f7-ab84-38f6a6bd93e9"],
Cell[109947, 2344, 216, 4, 31, "Text",ExpressionUUID->"8c4483f8-193d-453e-85df-09d59e9d5373"],
Cell[110166, 2350, 2588, 55, 141, "Code",ExpressionUUID->"d621d088-0cef-44d0-a3c4-8fa56b11c579"],
Cell[112757, 2407, 172, 3, 31, "Text",ExpressionUUID->"fe6e1559-9c75-4047-9641-802d81178ac5"],
Cell[112932, 2412, 1549, 35, 141, "Code",ExpressionUUID->"6561cd68-4937-4a2a-96cb-5b148c8b7d64"],
Cell[114484, 2449, 160, 3, 31, "Text",ExpressionUUID->"5c16751e-095a-46aa-988c-212d6afb9cd6"],
Cell[114647, 2454, 973, 17, 75, "Code",ExpressionUUID->"d0e40961-5fad-4546-9c94-3a4cc26d9c93"],
Cell[115623, 2473, 172, 3, 31, "Text",ExpressionUUID->"f012ec8a-7283-4072-8167-f9b9efef6187"],
Cell[115798, 2478, 1516, 29, 126, "Code",ExpressionUUID->"e880fb71-be5f-4487-a91c-8d66feff0e7a"]
}, Closed]],
Cell[CellGroupData[{
Cell[117351, 2512, 162, 3, 37, "Subsection",ExpressionUUID->"613eda07-6764-4a5b-837d-0213ab345599"],
Cell[117516, 2517, 980, 25, 32, "Text",ExpressionUUID->"b814ce63-19f2-4091-8d75-d09aefe4866a"]
}, Closed]],
Cell[CellGroupData[{
Cell[118533, 2547, 780, 22, 37, "Subsection",ExpressionUUID->"2562e1b2-183b-4242-b727-9c9de68c6829"],
Cell[119316, 2571, 808, 20, 32, "Text",ExpressionUUID->"e379f1c1-0634-4be9-882d-7d76f7443a24"],
Cell[120127, 2593, 3139, 56, 75, "Code",ExpressionUUID->"440f4be8-f13d-4b6c-ae32-b556f0e83a3b"],
Cell[123269, 2651, 244, 4, 31, "Text",ExpressionUUID->"c1df19c2-f0a8-4ac3-8c2c-5c154845ab65"],
Cell[123516, 2657, 7516, 134, 185, "Code",ExpressionUUID->"a2389f05-d046-4353-97d6-68eadeaff8a7"],
Cell[131035, 2793, 167, 3, 31, "Text",ExpressionUUID->"01406583-d964-4a75-bb01-91e89e388b99"],
Cell[131205, 2798, 2702, 59, 185, "Code",ExpressionUUID->"71d98d45-2c35-43ba-a5eb-86a38814887a"],
Cell[133910, 2859, 160, 3, 31, "Text",ExpressionUUID->"b872391c-4fba-45a0-9d7b-690ee89269d2"],
Cell[134073, 2864, 980, 20, 97, "Code",ExpressionUUID->"caf6ce15-87b8-4181-871c-ca89fb65f02a"],
Cell[135056, 2886, 172, 3, 31, "Text",ExpressionUUID->"c7f28ed2-6dbc-4f12-ac97-1f4c2d67c1d0"],
Cell[135231, 2891, 1572, 30, 126, "Code",ExpressionUUID->"a04c1f67-0dfc-44d2-a43d-886d479e5ef7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136852, 2927, 188, 3, 66, "Section",ExpressionUUID->"6039f564-0a97-4cef-afc6-10fbfe5a9cd3"],
Cell[137043, 2932, 664, 11, 50, "Text",ExpressionUUID->"8f8ae210-c6f5-4ba6-b8d6-5a366a31d7cf"],
Cell[CellGroupData[{
Cell[137732, 2947, 226, 4, 53, "Subsection",ExpressionUUID->"40e6fe63-613c-474d-875e-9a780040b3f7"],
Cell[137961, 2953, 722, 17, 44, "Text",ExpressionUUID->"d5f1f67e-3fd7-4e9a-adb6-d5f5075802b3"],
Cell[138686, 2972, 1995, 41, 97, "Code",ExpressionUUID->"bfdaeb90-38d8-4f89-84b3-f3547bba88ba"],
Cell[140684, 3015, 221, 4, 31, "Text",ExpressionUUID->"1217353b-df84-4501-9f86-0339461177eb"],
Cell[140908, 3021, 4748, 98, 229, "Code",ExpressionUUID->"76623319-95cd-4b3e-a2a5-f460c8d8533f"],
Cell[145659, 3121, 219, 4, 31, "Text",ExpressionUUID->"38c9b042-370e-441f-a408-9733605a8bdb"],
Cell[145881, 3127, 1859, 50, 229, "Code",ExpressionUUID->"b58aa8dd-53df-424a-8ed0-46f7a4bc649b"],
Cell[147743, 3179, 177, 3, 31, "Text",ExpressionUUID->"786cf8f2-190c-4fb6-8358-7b464ab35442"],
Cell[147923, 3184, 1008, 22, 229, "Code",ExpressionUUID->"9877222f-077d-439b-b7fb-2585c49dd916"],
Cell[148934, 3208, 713, 17, 44, "Text",ExpressionUUID->"e7727cce-44ef-4deb-ae8a-d46e2a35470e"],
Cell[149650, 3227, 1921, 50, 229, "Code",ExpressionUUID->"e9ce5e2c-a854-41fa-b61b-3a0ee54cc450"],
Cell[151574, 3279, 211, 4, 31, "Text",ExpressionUUID->"46549191-29e1-4ef2-9b13-8b06a69d8def"],
Cell[151788, 3285, 1220, 28, 119, "Code",ExpressionUUID->"d3a86af9-aef5-4d72-ae2b-b9a5732f209c"],
Cell[153011, 3315, 467, 8, 31, "Text",ExpressionUUID->"192688c2-e277-41b4-b467-d0fb3d8207f4"],
Cell[153481, 3325, 657, 14, 53, "Code",ExpressionUUID->"74df01d7-b95f-4bf2-99ae-3dc275e90c62"],
Cell[154141, 3341, 240, 6, 31, "Text",ExpressionUUID->"05c1ff78-42dc-4fa5-bb7d-a86854814589"]
}, Closed]],
Cell[CellGroupData[{
Cell[154418, 3352, 214, 4, 37, "Subsection",ExpressionUUID->"77a621de-c3a6-44b9-a335-9e984dd3349d"],
Cell[154635, 3358, 1014, 26, 44, "Text",ExpressionUUID->"7c6a6daa-09a3-4ae0-adaa-aeb9416461cd"],
Cell[155652, 3386, 452, 10, 97, "Code",ExpressionUUID->"27d9ec02-95b9-438e-a747-3cbfaba074cc"]
}, Closed]],
Cell[CellGroupData[{
Cell[156141, 3401, 213, 4, 37, "Subsection",ExpressionUUID->"fd56d8c3-ca55-49f7-a646-979d6599a587"],
Cell[156357, 3407, 407, 8, 31, "Text",ExpressionUUID->"5808e0b5-653c-4724-8739-0b88357b3524"],
Cell[156767, 3417, 2325, 75, 405, "Code",ExpressionUUID->"45e56b21-dd2e-418f-b9e7-b9db8b65f2d8"],
Cell[CellGroupData[{
Cell[159117, 3496, 1088, 27, 57, "Subsubsection",ExpressionUUID->"64bd4b0c-444a-431b-9860-f860a34b6ae6"],
Cell[160208, 3525, 342, 8, 32, "Text",ExpressionUUID->"8356ba83-cb34-4315-948a-e1734ac96f2b"],
Cell[160553, 3535, 346, 8, 53, "Code",ExpressionUUID->"b22a27f3-788c-402a-8c4a-d5c69a4108c9"],
Cell[160902, 3545, 864, 21, 38, "Text",ExpressionUUID->"a0eabe73-44b1-4758-a770-71c337ee4dfa"],
Cell[161769, 3568, 1000, 21, 70, "Code",ExpressionUUID->"36d80a83-493f-4359-bc79-917fb08fef9b"],
Cell[162772, 3591, 775, 19, 32, "Text",ExpressionUUID->"b21df411-7a29-4cf5-8a53-7928e50f53d3"],
Cell[163550, 3612, 589, 16, 53, "Code",ExpressionUUID->"cb7009a7-b7e1-46df-a50a-85add3841d0b"],
Cell[164142, 3630, 907, 25, 45, "Text",ExpressionUUID->"2f900535-b4eb-40f1-919b-29b9f9063353"],
Cell[165052, 3657, 964, 26, 53, "Code",ExpressionUUID->"6f3ad4b0-ff1b-440d-9674-bd65b1393815"],
Cell[166019, 3685, 1106, 32, 42, "Text",ExpressionUUID->"0f588952-43a6-4b32-892b-f442b937281d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167162, 3722, 989, 27, 57, "Subsubsection",ExpressionUUID->"ad7801ca-419a-4ef5-b776-beb64a241fda"],
Cell[168154, 3751, 647, 17, 32, "Text",ExpressionUUID->"01c3c5d5-994d-4b2a-a253-855415b9fd67"],
Cell[168804, 3770, 708, 19, 53, "Code",ExpressionUUID->"7d09484e-cfe9-4298-a79a-3568a381d8dd"],
Cell[169515, 3791, 531, 14, 38, "Text",ExpressionUUID->"a18fe969-3229-43e2-8861-a744b0228766"],
Cell[170049, 3807, 457, 12, 70, "Code",ExpressionUUID->"3401efc8-5961-45be-bf06-659cb24bca08"],
Cell[170509, 3821, 467, 14, 32, "Text",ExpressionUUID->"d9fb351a-240a-467f-aed1-a3e41cef8114"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171013, 3840, 756, 21, 57, "Subsubsection",ExpressionUUID->"e9c4fce8-269c-4488-b715-9624c3354d44"],
Cell[171772, 3863, 340, 8, 32, "Text",ExpressionUUID->"46f532b4-6281-40a0-9558-10fd6bb97d79"],
Cell[172115, 3873, 242, 6, 53, "Code",ExpressionUUID->"eb45bf4e-1bd3-45a0-b9fc-143281d23acd"],
Cell[172360, 3881, 720, 19, 38, "Text",ExpressionUUID->"d2e999ea-6428-40b9-95e1-97e26cca95d5"],
Cell[173083, 3902, 502, 14, 70, "Code",ExpressionUUID->"a4c44a3b-fc46-490d-9a5c-a3b6a379f739"],
Cell[173588, 3918, 727, 18, 32, "Text",ExpressionUUID->"5e763020-301c-42b7-be43-9914f2517b94"],
Cell[174318, 3938, 1155, 23, 53, "Code",ExpressionUUID->"e2845388-520b-4e24-9881-5fd68ee2d2d4"],
Cell[175476, 3963, 836, 23, 38, "Text",ExpressionUUID->"aaf00c72-ecf9-4ac0-8270-a138d164315e"],
Cell[176315, 3988, 913, 24, 53, "Code",ExpressionUUID->"34e25172-1f1b-4757-adc6-8b17c3059527"],
Cell[177231, 4014, 1681, 44, 84, "Text",ExpressionUUID->"e966e454-3a91-4be8-bf85-b814e0f7bdd2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178961, 4064, 211, 4, 37, "Subsection",ExpressionUUID->"9cf3f918-b974-4251-96b4-f26f360c6f4a"],
Cell[179175, 4070, 891, 24, 44, "Text",ExpressionUUID->"d6df7f53-7e04-4de6-a0b6-6fe7ab424859"],
Cell[180069, 4096, 243, 5, 53, "Code",ExpressionUUID->"c8290570-1918-4b00-abee-2da9c7aeca46"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

